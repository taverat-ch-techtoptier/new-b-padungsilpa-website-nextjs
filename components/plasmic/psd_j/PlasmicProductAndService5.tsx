// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: wauR2tk1hPNKxeSBCX7ndF
// Component: x03w5FBu3TfW

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import Header3 from "../../Header3"; // plasmic-import: Fs6IO6-MbSpr/component
import Test from "../../Test"; // plasmic-import: N8x7vUKS4T3n/component
import Footer2 from "../../Footer2"; // plasmic-import: 9pDOvBRTOpt9/component

import { useScreenVariants as useScreenVariants_2YPqM3KDWg } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: 2yPqM3-kD-WG/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: wauR2tk1hPNKxeSBCX7ndF/projectcss
import sty from "./PlasmicProductAndService5.module.css"; // plasmic-import: x03w5FBu3TfW/css

import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: 8DjHUJI81s9x/icon
import ArrowRightIcon from "./icons/PlasmicIcon__ArrowRight"; // plasmic-import: HZOtD1fAEgQN/icon
import Icon8Icon from "./icons/PlasmicIcon__Icon8"; // plasmic-import: YDVzHW_YDla2/icon
import _14655891761535698998SvgIcon from "./icons/PlasmicIcon___14655891761535698998Svg"; // plasmic-import: YG3YAEM_AYjb/icon

createPlasmicElementProxy;

export type PlasmicProductAndService5__VariantMembers = {};
export type PlasmicProductAndService5__VariantsArgs = {};
type VariantPropType = keyof PlasmicProductAndService5__VariantsArgs;
export const PlasmicProductAndService5__VariantProps =
  new Array<VariantPropType>();

export type PlasmicProductAndService5__ArgsType = {
  pic?: React.ReactNode;
  slot?: React.ReactNode;
  pic2?: React.ReactNode;
  slot2?: React.ReactNode;
  pic3?: React.ReactNode;
  slot3?: React.ReactNode;
  pic4?: React.ReactNode;
  slot4?: React.ReactNode;
  pic5?: React.ReactNode;
  slot5?: React.ReactNode;
  pic6?: React.ReactNode;
  slot6?: React.ReactNode;
  pic7?: React.ReactNode;
  slot7?: React.ReactNode;
  pic8?: React.ReactNode;
  slot8?: React.ReactNode;
  pic9?: React.ReactNode;
  slot9?: React.ReactNode;
  pic10?: React.ReactNode;
  slot10?: React.ReactNode;
  pic11?: React.ReactNode;
  slot11?: React.ReactNode;
  pic12?: React.ReactNode;
  slot12?: React.ReactNode;
  pic13?: React.ReactNode;
  slot13?: React.ReactNode;
  pic14?: React.ReactNode;
  slot14?: React.ReactNode;
  pic15?: React.ReactNode;
  slot15?: React.ReactNode;
  pic16?: React.ReactNode;
  slot16?: React.ReactNode;
  pic17?: React.ReactNode;
  slot17?: React.ReactNode;
  pic18?: React.ReactNode;
  slot18?: React.ReactNode;
  pic19?: React.ReactNode;
  slot19?: React.ReactNode;
  pic20?: React.ReactNode;
  slot20?: React.ReactNode;
  pic21?: React.ReactNode;
  slot21?: React.ReactNode;
  pic22?: React.ReactNode;
  slot22?: React.ReactNode;
  pic23?: React.ReactNode;
  slot23?: React.ReactNode;
  pic24?: React.ReactNode;
  slot24?: React.ReactNode;
  pic25?: React.ReactNode;
  slot25?: React.ReactNode;
  pic26?: React.ReactNode;
  slot26?: React.ReactNode;
  pic27?: React.ReactNode;
  slot27?: React.ReactNode;
  pic28?: React.ReactNode;
  slot28?: React.ReactNode;
  pic29?: React.ReactNode;
  slot29?: React.ReactNode;
  pic30?: React.ReactNode;
  slot30?: React.ReactNode;
  pic31?: React.ReactNode;
  slot31?: React.ReactNode;
  pic32?: React.ReactNode;
  slot32?: React.ReactNode;
  pic33?: React.ReactNode;
  slot33?: React.ReactNode;
};
type ArgPropType = keyof PlasmicProductAndService5__ArgsType;
export const PlasmicProductAndService5__ArgProps = new Array<ArgPropType>(
  "pic",
  "slot",
  "pic2",
  "slot2",
  "pic3",
  "slot3",
  "pic4",
  "slot4",
  "pic5",
  "slot5",
  "pic6",
  "slot6",
  "pic7",
  "slot7",
  "pic8",
  "slot8",
  "pic9",
  "slot9",
  "pic10",
  "slot10",
  "pic11",
  "slot11",
  "pic12",
  "slot12",
  "pic13",
  "slot13",
  "pic14",
  "slot14",
  "pic15",
  "slot15",
  "pic16",
  "slot16",
  "pic17",
  "slot17",
  "pic18",
  "slot18",
  "pic19",
  "slot19",
  "pic20",
  "slot20",
  "pic21",
  "slot21",
  "pic22",
  "slot22",
  "pic23",
  "slot23",
  "pic24",
  "slot24",
  "pic25",
  "slot25",
  "pic26",
  "slot26",
  "pic27",
  "slot27",
  "pic28",
  "slot28",
  "pic29",
  "slot29",
  "pic30",
  "slot30",
  "pic31",
  "slot31",
  "pic32",
  "slot32",
  "pic33",
  "slot33"
);

export type PlasmicProductAndService5__OverridesType = {
  page?: Flex__<"div">;
  header3?: Flex__<typeof Header3>;
  bannerHeader?: Flex__<"div">;
  h1?: Flex__<"h1">;
  subHeader2?: Flex__<"div">;
  foreground?: Flex__<"div">;
  productAndService?: Flex__<"div">;
  potential?: Flex__<"div">;
  left2?: Flex__<"div">;
  footer2?: Flex__<typeof Footer2>;
};

export interface DefaultProductAndService5Props {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicProductAndService5__RenderFunc(props: {
  variants: PlasmicProductAndService5__VariantsArgs;
  args: PlasmicProductAndService5__ArgsType;
  overrides: PlasmicProductAndService5__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants_2YPqM3KDWg()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <Stack__
          as={"div"}
          data-plasmic-name={"page"}
          data-plasmic-override={overrides.page}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.page
          )}
        >
          <Header3
            data-plasmic-name={"header3"}
            data-plasmic-override={overrides.header3}
            className={classNames("__wab_instance", sty.header3)}
          />

          <div
            data-plasmic-name={"bannerHeader"}
            data-plasmic-override={overrides.bannerHeader}
            className={classNames(projectcss.all, sty.bannerHeader)}
          >
            <div className={classNames(projectcss.all, sty.freeBox___6YKlE)}>
              <div className={classNames(projectcss.all, sty.freeBox__zL9N1)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__m4Z0)}
                >
                  <h1
                    data-plasmic-name={"h1"}
                    data-plasmic-override={overrides.h1}
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "\u0e2a\u0e34\u0e19\u0e04\u0e49\u0e32\u0e41\u0e25\u0e30\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23"
                      : "\u0e2a\u0e34\u0e19\u0e04\u0e49\u0e32\u0e41\u0e25\u0e30\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23"}
                  </h1>
                </Stack__>
              </div>
            </div>
          </div>
          <Stack__
            as={"div"}
            data-plasmic-name={"subHeader2"}
            data-plasmic-override={overrides.subHeader2}
            hasGap={true}
            className={classNames(projectcss.all, sty.subHeader2)}
          >
            <Stack__
              as={PlasmicLink__}
              hasGap={true}
              className={classNames(
                projectcss.all,
                projectcss.a,
                sty.link__g2D7W
              )}
              component={Link}
              href={`/Fuel Service Construction`}
              platform={"nextjs"}
            >
              {false ? (
                <IconIcon
                  className={classNames(projectcss.all, sty.svg__owHuX)}
                  role={"img"}
                />
              ) : null}
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__zOze
                )}
              >
                {
                  "\u0e07\u0e32\u0e19\u0e01\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e04\u0e23\u0e1a\u0e27\u0e07\u0e08\u0e23"
                }
              </div>
              {false ? (
                <IconIcon
                  className={classNames(projectcss.all, sty.svg__roSqj)}
                  role={"img"}
                />
              ) : null}
            </Stack__>
            <Stack__
              as={PlasmicLink__}
              hasGap={true}
              className={classNames(
                projectcss.all,
                projectcss.a,
                sty.link__epmfp
              )}
              component={Link}
              href={`/PERMATANK and Different Types of Fuel Tanks`}
              platform={"nextjs"}
            >
              {false ? (
                <IconIcon
                  className={classNames(projectcss.all, sty.svg__i9G2S)}
                  role={"img"}
                />
              ) : null}
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__dbgJw
                )}
              >
                {
                  "PERMATANK \u0e41\u0e25\u0e30\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e41\u0e1a\u0e1a\u0e15\u0e48\u0e32\u0e07 \u0e46"
                }
              </div>
              {false ? (
                <IconIcon
                  className={classNames(projectcss.all, sty.svg__ctpWj)}
                  role={"img"}
                />
              ) : null}
            </Stack__>
            <Stack__
              as={PlasmicLink__}
              hasGap={true}
              className={classNames(
                projectcss.all,
                projectcss.a,
                sty.link__k7Vq6
              )}
              component={Link}
              href={`/Sale and Installation of Petrol Pipe System`}
              platform={"nextjs"}
            >
              {false ? (
                <IconIcon
                  className={classNames(projectcss.all, sty.svg__coZFi)}
                  role={"img"}
                />
              ) : null}
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__gcDDu
                )}
              >
                {
                  "\u0e08\u0e33\u0e2b\u0e19\u0e48\u0e32\u0e22\u0e41\u0e25\u0e30\u0e15\u0e34\u0e14\u0e15\u0e31\u0e49\u0e07\u0e17\u0e48\u0e2d\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e43\u0e15\u0e49\u0e14\u0e34\u0e19\u0e1c\u0e19\u0e31\u0e07 2 \u0e0a\u0e31\u0e49\u0e19"
                }
              </div>
              {false ? (
                <IconIcon
                  className={classNames(projectcss.all, sty.svg__lT5VJ)}
                  role={"img"}
                />
              ) : null}
            </Stack__>
            <Stack__
              as={PlasmicLink__}
              hasGap={true}
              className={classNames(
                projectcss.all,
                projectcss.a,
                sty.link___64Ji
              )}
              component={Link}
              href={`/Automatic Tank Gauge System`}
              platform={"nextjs"}
            >
              {false ? (
                <IconIcon
                  className={classNames(projectcss.all, sty.svg__wnhnd)}
                  role={"img"}
                />
              ) : null}
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__llXlo
                )}
              >
                {
                  "\u0e23\u0e30\u0e1a\u0e1a\u0e27\u0e31\u0e14\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e2d\u0e31\u0e15\u0e42\u0e19\u0e21\u0e31\u0e15\u0e34\u0e20\u0e32\u0e22\u0e43\u0e19\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19"
                }
              </div>
              {false ? (
                <IconIcon
                  className={classNames(projectcss.all, sty.svg__pAeP4)}
                  role={"img"}
                />
              ) : null}
            </Stack__>
            <Stack__
              as={PlasmicLink__}
              hasGap={true}
              className={classNames(
                projectcss.all,
                projectcss.a,
                sty.link__ee0UT
              )}
              component={Link}
              href={`/Fuel Tanks & Equipment`}
              platform={"nextjs"}
            >
              {false ? (
                <IconIcon
                  className={classNames(projectcss.all, sty.svg__gK0Gh)}
                  role={"img"}
                />
              ) : null}
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__mvpC
                )}
              >
                {
                  "\u0e2d\u0e38\u0e1b\u0e01\u0e23\u0e13\u0e4c\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e01\u0e31\u0e1a\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19"
                }
              </div>
              {false ? (
                <IconIcon
                  className={classNames(projectcss.all, sty.svg__n7DCl)}
                  role={"img"}
                />
              ) : null}
            </Stack__>
            <Stack__
              as={PlasmicLink__}
              hasGap={true}
              className={classNames(
                projectcss.all,
                projectcss.a,
                sty.link__jMr27
              )}
              component={Link}
              href={`/Fuel Tanks & Equipment`}
              platform={"nextjs"}
            >
              {false ? (
                <IconIcon
                  className={classNames(projectcss.all, sty.svg__hpFmc)}
                  role={"img"}
                />
              ) : null}
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__nnRav
                )}
              >
                {
                  "\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e15\u0e48\u0e32\u0e07 \u0e46 \u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e01\u0e31\u0e1a\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19"
                }
              </div>
              {false ? (
                <IconIcon
                  className={classNames(projectcss.all, sty.svg__stlf7)}
                  role={"img"}
                />
              ) : null}
            </Stack__>
            {(
              hasVariant(globalVariants, "screen", "mobileOnly") ? true : false
            ) ? (
              <Stack__
                as={PlasmicLink__}
                hasGap={true}
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  sty.link__bnnkx
                )}
                component={Link}
                href={`/Fuel Service Construction`}
                platform={"nextjs"}
              >
                {false ? (
                  <IconIcon
                    className={classNames(projectcss.all, sty.svg__a0Rq6)}
                    role={"img"}
                  />
                ) : null}
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__scIQ
                  )}
                >
                  {
                    "\u0e07\u0e32\u0e19\u0e01\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e04\u0e23\u0e1a\u0e27\u0e07\u0e08\u0e23"
                  }
                </div>
                {false ? (
                  <IconIcon
                    className={classNames(projectcss.all, sty.svg__qnIn)}
                    role={"img"}
                  />
                ) : null}
              </Stack__>
            ) : null}
          </Stack__>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__ec416)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___5A9G)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"foreground"}
                data-plasmic-override={overrides.foreground}
                hasGap={true}
                className={classNames(projectcss.all, sty.foreground)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__tLjGx)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__pvMuU)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___4DvSf
                      )}
                    >
                      <h2
                        className={classNames(
                          projectcss.all,
                          projectcss.h2,
                          projectcss.__wab_text,
                          sty.h2___8ZTjz
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "\u0e2d\u0e38\u0e1b\u0e01\u0e23\u0e13\u0e4c\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e01\u0e31\u0e1a\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19"
                          : "\u0e2d\u0e38\u0e1b\u0e01\u0e23\u0e13\u0e4c\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e01\u0e31\u0e1a\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19"}
                      </h2>
                    </Stack__>
                  </div>
                </Stack__>
                {(
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? true
                    : false
                ) ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ek30Z)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__t6A59)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__fYuad
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___4IdsQ
                          )}
                        >
                          <ArrowRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg___4XYg
                            )}
                            role={"img"}
                          />
                        </div>
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__btPe7
                            )}
                          >
                            <Icon8Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__lrrWz
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__yihDg
                          )}
                        >
                          <Stack__
                            as={PlasmicLink__}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              sty.link__tzQ
                            )}
                            component={Link}
                            href={`/`}
                            platform={"nextjs"}
                          >
                            {false ? (
                              <IconIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__qcuHx
                                )}
                                role={"img"}
                              />
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__m9U
                              )}
                            >
                              {
                                "\u0e07\u0e32\u0e19\u0e01\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19"
                              }
                            </div>
                            {false ? (
                              <IconIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___1Dffd
                                )}
                                role={"img"}
                              />
                            ) : null}
                          </Stack__>
                        </Stack__>
                      </Stack__>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__ly1Wp)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__gyExc
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__cj07O
                          )}
                        >
                          <ArrowRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__ogmwu
                            )}
                            role={"img"}
                          />
                        </div>
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___9444P
                            )}
                          >
                            <Icon8Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__o3Eck
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__qmAw9
                          )}
                        >
                          <Stack__
                            as={PlasmicLink__}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              sty.link__zh7Xp
                            )}
                            component={Link}
                            href={`/`}
                            platform={"nextjs"}
                          >
                            {false ? (
                              <IconIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___4X8W0
                                )}
                                role={"img"}
                              />
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__fptj
                              )}
                            >
                              {
                                "PERMATANK\u00ae \u0e41\u0e25\u0e30\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e41\u0e1a\u0e1a\u0e15\u0e48\u0e32\u0e07\u0e46"
                              }
                            </div>
                            {false ? (
                              <IconIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___8Ijuf
                                )}
                                role={"img"}
                              />
                            ) : null}
                          </Stack__>
                        </Stack__>
                      </Stack__>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__iP1Z)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__j97Cn
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___22X4E
                          )}
                        >
                          <ArrowRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__mU2UW
                            )}
                            role={"img"}
                          />
                        </div>
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__coXmW
                            )}
                          >
                            <Icon8Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg___7Qav
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__iaH2
                          )}
                        >
                          <Stack__
                            as={PlasmicLink__}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              sty.link__ru0Av
                            )}
                            component={Link}
                            href={`/`}
                            platform={"nextjs"}
                          >
                            {false ? (
                              <IconIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__xqCSu
                                )}
                                role={"img"}
                              />
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___1PSrR
                              )}
                            >
                              {
                                "\u0e08\u0e33\u0e2b\u0e19\u0e48\u0e32\u0e22\u0e41\u0e25\u0e30\u0e15\u0e34\u0e14\u0e15\u0e31\u0e49\u0e07\u0e17\u0e48\u0e2d\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e43\u0e15\u0e49\u0e14\u0e34\u0e19\u0e1c\u0e19\u0e31\u0e07 2 \u0e0a\u0e31\u0e49\u0e19"
                              }
                            </div>
                            {false ? (
                              <IconIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__oumSg
                                )}
                                role={"img"}
                              />
                            ) : null}
                          </Stack__>
                        </Stack__>
                      </Stack__>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__w3CQn)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__ccJtq
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__nxg0G
                          )}
                        >
                          <ArrowRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__uxFal
                            )}
                            role={"img"}
                          />
                        </div>
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__k9EIy
                            )}
                          >
                            <Icon8Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__egYo8
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__dzNb0
                          )}
                        >
                          <Stack__
                            as={PlasmicLink__}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              sty.link__lnyk0
                            )}
                            component={Link}
                            href={`/`}
                            platform={"nextjs"}
                          >
                            {false ? (
                              <IconIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__gCbuj
                                )}
                                role={"img"}
                              />
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__e5Bcr
                              )}
                            >
                              {
                                "\u0e23\u0e30\u0e1a\u0e1a\u0e27\u0e31\u0e14\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e2d\u0e31\u0e15\u0e42\u0e19\u0e21\u0e31\u0e15\u0e34\u0e20\u0e32\u0e22\u0e43\u0e19\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19"
                              }
                            </div>
                            {false ? (
                              <IconIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__a07ZK
                                )}
                                role={"img"}
                              />
                            ) : null}
                          </Stack__>
                        </Stack__>
                      </Stack__>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__bYpWb)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___2ZCws
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__h8Kgg
                          )}
                        >
                          <ArrowRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__nRo9Y
                            )}
                            role={"img"}
                          />
                        </div>
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__w440U
                            )}
                          >
                            <Icon8Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__s70Se
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__jo2Bj
                          )}
                        >
                          <Stack__
                            as={PlasmicLink__}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              sty.link__omQo
                            )}
                            component={Link}
                            href={`/`}
                            platform={"nextjs"}
                          >
                            {false ? (
                              <IconIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__gBhQ
                                )}
                                role={"img"}
                              />
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ydbt1
                              )}
                            >
                              {
                                "\u0e2d\u0e38\u0e1b\u0e01\u0e23\u0e13\u0e4c\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e01\u0e31\u0e1a\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19"
                              }
                            </div>
                            {false ? (
                              <IconIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___5J0Xs
                                )}
                                role={"img"}
                              />
                            ) : null}
                          </Stack__>
                        </Stack__>
                      </Stack__>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__h51Es)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__esMh4
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__vzZdq
                          )}
                        >
                          <ArrowRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__bCyk7
                            )}
                            role={"img"}
                          />
                        </div>
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__tIaRw
                            )}
                          >
                            <Icon8Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__gj5QC
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__nta1Z
                          )}
                        >
                          <Stack__
                            as={PlasmicLink__}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              sty.link__jMe3S
                            )}
                            component={Link}
                            href={`/`}
                            platform={"nextjs"}
                          >
                            {false ? (
                              <IconIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__km7J
                                )}
                                role={"img"}
                              />
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__qjp9G
                              )}
                            >
                              {
                                "\u0e43\u0e2b\u0e49\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e15\u0e48\u0e32\u0e07\u0e46\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e01\u0e31\u0e1a\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19"
                              }
                            </div>
                            {false ? (
                              <IconIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__bvqjQ
                                )}
                                role={"img"}
                              />
                            ) : null}
                          </Stack__>
                        </Stack__>
                      </Stack__>
                    </div>
                  </div>
                ) : null}
              </Stack__>
            </Stack__>
          </Stack__>
          <Stack__
            as={"div"}
            data-plasmic-name={"productAndService"}
            data-plasmic-override={overrides.productAndService}
            hasGap={true}
            className={classNames(projectcss.all, sty.productAndService)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__hwTte)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns___0VnTk)}
              >
                <div className={classNames(projectcss.all, sty.column___04Uoq)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__c998B
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__oEm6)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__s3AEg)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/ehBdt2PttJpg.jpg",
                              fullWidth: 605,
                              fullHeight: 454,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__x865C)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <React.Fragment>
                            <Stack__
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__e44Y
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__xBrSl
                                )}
                              >
                                <_14655891761535698998SvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg___2MxaB
                                  )}
                                  role={"img"}
                                />
                              </div>
                            </Stack__>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__uCpW
                              )}
                            >
                              {
                                "\u0e2b\u0e31\u0e27\u0e17\u0e32\u0e07\u0e27\u0e31\u0e14\u0e23\u0e30\u0e14\u0e31\u0e1a\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e02\u0e19\u0e32\u0e14 2\u201d \u0e41\u0e1a\u0e1a\u0e17\u0e2d\u0e07\u0e40\u0e2b\u0e25\u0e37\u0e2d\u0e07 [EH-BDT-2-PTT]"
                              }
                            </div>
                          </React.Fragment>
                        ),
                        value: args.slot
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__h19I4)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___9Zuhs
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__tvN9D)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__qxZx)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/ehSdt2Jpg.jpg",
                              fullWidth: 648,
                              fullHeight: 486,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic2
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__ygI7J)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__lgFbE
                            )}
                          >
                            {
                              "\u0e2b\u0e31\u0e27\u0e17\u0e32\u0e07\u0e27\u0e31\u0e14\u0e23\u0e30\u0e14\u0e31\u0e1a\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e02\u0e19\u0e32\u0e14 2\u201d \u0e41\u0e1a\u0e1a\u0e2a\u0e40\u0e15\u0e19\u0e40\u0e25\u0e2a [EH-SDT-2]"
                            }
                          </div>
                        ),
                        value: args.slot2
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__e2Sip)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__qJlJ4
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__t31I)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__ibLzT)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/ehBdt3Jpg.jpg",
                              fullWidth: 648,
                              fullHeight: 486,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic3
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__in8Dn)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__eC1Rv
                            )}
                          >
                            {
                              "\u0e2b\u0e31\u0e27\u0e17\u0e32\u0e07\u0e27\u0e31\u0e14\u0e23\u0e30\u0e14\u0e31\u0e1a\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e41\u0e1a\u0e1a\u0e25\u0e47\u0e2d\u0e04\u0e40\u0e23\u0e47\u0e27 \u0e02\u0e19\u0e32\u0e14 1.5\u201d - 2\u201d \u0e41\u0e1a\u0e1a\u0e17\u0e2d\u0e07\u0e40\u0e2b\u0e25\u0e37\u0e2d\u0e07"
                            }
                          </div>
                        ),
                        value: args.slot3
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__fCfG)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___9R6De
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__s9Y40)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__ssNxS)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/ehSdt3Jpg.jpg",
                              fullWidth: 648,
                              fullHeight: 486,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic4
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__diVb)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___8VMxF
                            )}
                          >
                            {
                              "\u0e2b\u0e31\u0e27\u0e17\u0e32\u0e07\u0e27\u0e31\u0e14\u0e23\u0e30\u0e14\u0e31\u0e1a\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e41\u0e1a\u0e1a CALTEX \u0e02\u0e19\u0e32\u0e14 2.5\u201d \u0e41\u0e1a\u0e1a\u0e17\u0e2d\u0e07\u0e40\u0e2b\u0e25\u0e37\u0e2d\u0e07"
                            }
                          </div>
                        ),
                        value: args.slot4
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__sjvVc)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__c4GgP
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__ckO24)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__b7O3G)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/efcS3Jpg.jpg",
                              fullWidth: 648,
                              fullHeight: 485,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic5
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__eREch)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__gytDl
                            )}
                          >
                            {
                              "\u0e2b\u0e31\u0e27\u0e17\u0e32\u0e07\u0e23\u0e31\u0e1a\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e41\u0e1a\u0e1a\u0e40\u0e01\u0e25\u0e35\u0e22\u0e27\u0e02\u0e19\u0e32\u0e14 3\u201d \u0e0a\u0e19\u0e34\u0e14\u0e2a\u0e40\u0e15\u0e19\u0e40\u0e25\u0e2a [EFC-S3]"
                            }
                          </div>
                        ),
                        value: args.slot5
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column___8RYoT)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__bzLyf
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__yqww5)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__uaip)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/efc3PttJpg.jpg",
                              fullWidth: 592,
                              fullHeight: 444,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic6
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__jAoWl)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__iUmbu
                            )}
                          >
                            {
                              "\u0e2b\u0e31\u0e27\u0e17\u0e32\u0e07\u0e23\u0e31\u0e1a\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e41\u0e1a\u0e1a\u0e40\u0e01\u0e25\u0e35\u0e22\u0e27\u0e02\u0e19\u0e32\u0e14 3\u201d \u0e0a\u0e19\u0e34\u0e14\u0e17\u0e2d\u0e07\u0e40\u0e2b\u0e25\u0e37\u0e2d\u0e07 [EFC-3-PTT]"
                            }
                          </div>
                        ),
                        value: args.slot6
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__b1Nvo)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___4SX4X
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__rYoo4)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__iyPp)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/efc4Jpg.jpg",
                              fullWidth: 648,
                              fullHeight: 485,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic7
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__dNoxo)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__slh2M
                            )}
                          >
                            {
                              "\u0e2b\u0e31\u0e27\u0e17\u0e32\u0e07\u0e23\u0e31\u0e1a\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e41\u0e1a\u0e1a\u0e40\u0e01\u0e25\u0e35\u0e22\u0e27\u0e02\u0e19\u0e32\u0e14 3\u201d \u0e0a\u0e19\u0e34\u0e14\u0e40\u0e2b\u0e25\u0e47\u0e01\u0e2b\u0e25\u0e48\u0e2d"
                            }
                          </div>
                        ),
                        value: args.slot7
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__gscX8)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__i3BlU
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__sqwxm)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__s3DF)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/efc5Jpg.jpg",
                              fullWidth: 642,
                              fullHeight: 481,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic8
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__cXKjB)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__yx3Dd
                            )}
                          >
                            {
                              "\u0e2b\u0e31\u0e27\u0e17\u0e32\u0e07\u0e23\u0e31\u0e1a\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e41\u0e1a\u0e1a\u0e25\u0e47\u0e2d\u0e04\u0e40\u0e23\u0e47\u0e27\u0e02\u0e19\u0e32\u0e14 3\u201d \u0e0a\u0e19\u0e34\u0e14\u0e17\u0e2d\u0e07\u0e40\u0e2b\u0e25\u0e37\u0e2d\u0e07"
                            }
                          </div>
                        ),
                        value: args.slot8
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__igjdX)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___9Xar
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__i6Ncz)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__lfLjZ)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/efc6Jpg.jpg",
                              fullWidth: 648,
                              fullHeight: 485,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic9
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__kgV4I)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___1Cj6N
                            )}
                          >
                            {
                              "\u0e2b\u0e31\u0e27\u0e17\u0e32\u0e07\u0e23\u0e31\u0e1a\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e41\u0e1a\u0e1a\u0e25\u0e47\u0e2d\u0e04\u0e40\u0e23\u0e47\u0e27\u0e02\u0e19\u0e32\u0e14 4\u201d \u0e0a\u0e19\u0e34\u0e14\u0e2d\u0e25\u0e39\u0e21\u0e34\u0e40\u0e19\u0e35\u0e22\u0e21"
                            }
                          </div>
                        ),
                        value: args.slot9
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__xnSl)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__mv9GN
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___90QFu
                      )}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img___4Nm3B)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/efc7Jpg.jpg",
                              fullWidth: 609,
                              fullHeight: 457,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic10
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___4Zlro
                      )}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__dyZab
                            )}
                          >
                            {
                              "\u0e2b\u0e31\u0e27\u0e17\u0e32\u0e07\u0e23\u0e31\u0e1a\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e41\u0e1a\u0e1a\u0e40\u0e02\u0e35\u0e4a\u0e22\u0e27\u0e25\u0e47\u0e2d\u0e04\u0e02\u0e19\u0e32\u0e14 3\u201d \u0e0a\u0e19\u0e34\u0e14\u0e17\u0e2d\u0e07\u0e40\u0e2b\u0e25\u0e37\u0e2d\u0e07"
                            }
                          </div>
                        ),
                        value: args.slot10
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__iXiWe)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___5Lc8P
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__tCu1O)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__dyJR)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/hVtA2Jpg.jpg",
                              fullWidth: 648,
                              fullHeight: 486,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic11
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__h7YnK)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__taqoA
                            )}
                          >
                            {
                              "\u0e2b\u0e31\u0e27\u0e17\u0e48\u0e2d\u0e23\u0e30\u0e1a\u0e32\u0e22\u0e44\u0e2d\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e41\u0e1a\u0e1a\u0e15\u0e31\u0e27\u0e17\u0e35 \u0e02\u0e19\u0e32\u0e14 2\u201d [H-VT-A2]"
                            }
                          </div>
                        ),
                        value: args.slot11
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__trK0N)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___5C9AM
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___9VAvC
                      )}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img___5929C)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/hVtA3Jpg.jpg",
                              fullWidth: 648,
                              fullHeight: 486,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic12
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__yfEh9)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__szp2A
                            )}
                          >
                            {
                              "\u0e2b\u0e31\u0e27\u0e17\u0e48\u0e2d\u0e23\u0e30\u0e1a\u0e32\u0e22\u0e44\u0e2d\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e41\u0e1a\u0e1a\u0e2b\u0e31\u0e27\u0e40\u0e2b\u0e47\u0e14 \u0e02\u0e19\u0e32\u0e14 2\u201d \u0e0a\u0e19\u0e34\u0e14\u0e2d\u0e25\u0e39\u0e21\u0e34\u0e40\u0e19\u0e35\u0e22\u0e21"
                            }
                          </div>
                        ),
                        value: args.slot12
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__dbYeI)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__tOsv6
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__wQdCd)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__uZbxt)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/hVtA4Jpg.jpg",
                              fullWidth: 648,
                              fullHeight: 486,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic13
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__hdNQ)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__fcJjj
                            )}
                          >
                            {
                              "\u0e2b\u0e31\u0e27\u0e17\u0e48\u0e2d\u0e23\u0e30\u0e1a\u0e32\u0e22\u0e44\u0e2d\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19 \u0e02\u0e19\u0e32\u0e14 2\u201d \u0e0a\u0e19\u0e34\u0e14\u0e17\u0e2d\u0e07\u0e40\u0e2b\u0e25\u0e37\u0e2d\u0e07"
                            }
                          </div>
                        ),
                        value: args.slot13
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column___1Fe8)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__ujSa
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__gef8)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__sOw6N)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/tankMonitor01Jpg.jpg",
                              fullWidth: 648,
                              fullHeight: 486,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic14
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__dCnhm)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__odc70
                            )}
                          >
                            {"TANK MONITOR SENSOR SET"}
                          </div>
                        ),
                        value: args.slot14
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__ts8EM)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__vkr9C
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___0OjXv
                      )}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__qLkOh)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/vgHJpg.jpg",
                              fullWidth: 648,
                              fullHeight: 485,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic15
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__fh3Q)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___7NfDn
                            )}
                          >
                            {"Vacuum Gauge Set + Level Sensor [VG-H]"}
                          </div>
                        ),
                        value: args.slot15
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__ywWqF)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__hEAhD
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__qam0V)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img___8Sw8Y)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/vgOJpg.jpg",
                              fullWidth: 648,
                              fullHeight: 486,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic16
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___29K3A
                      )}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__haRfd
                            )}
                          >
                            {
                              "[VG-O] \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e15\u0e23\u0e27\u0e08\u0e04\u0e48\u0e32\u0e2a\u0e39\u0e0d\u0e32\u0e01\u0e32\u0e28 (Vacuum ) \u0e02\u0e2d\u0e07\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e43\u0e15\u0e49\u0e14\u0e34\u0e19\u0e41\u0e1a\u0e1a\u0e1c\u0e19\u0e31\u0e07 2 \u0e0a\u0e31\u0e49\u0e19"
                            }
                          </div>
                        ),
                        value: args.slot16
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__d1TMq)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__or1AE
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__y7DbM)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__ncigg)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/emhCa25CnJpg.jpg",
                              fullWidth: 617,
                              fullHeight: 463,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic17
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__pMyAo)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__sYz4G
                            )}
                          >
                            {
                              "\u0e1d\u0e32\u0e1a\u0e48\u0e2d\u0e08\u0e35\u0e1a\u0e44\u0e1f\u0e40\u0e1a\u0e2d\u0e23\u0e4c\u0e01\u0e25\u0e4a\u0e32\u0e2a\u0e04\u0e2d\u0e21\u0e42\u0e1e\u0e2a\u0e34\u0e17 35 \u0e0b\u0e21. [EMH-CA25-CN]"
                            }
                          </div>
                        ),
                        value: args.slot17
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column___6Kui)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__wnGpt
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__cLzPs)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__ih1Wb)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/emhCa97CnJpg.jpg",
                              fullWidth: 592,
                              fullHeight: 444,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic18
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__gfh9P)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___4M7S1
                            )}
                          >
                            {
                              "\u0e1d\u0e32\u0e41\u0e21\u0e19\u0e42\u0e2e\u0e25\u0e44\u0e1f\u0e40\u0e1a\u0e2d\u0e23\u0e4c\u0e01\u0e25\u0e4a\u0e32\u0e2a\u0e04\u0e2d\u0e21\u0e42\u0e1e\u0e2a\u0e34\u0e17 [EMH-CA97-CN]"
                            }
                          </div>
                        ),
                        value: args.slot18
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__ptDga)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__oG0Xp
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__bTlD)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__gd6X)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/emhCa25Jpg.jpg",
                              fullWidth: 587,
                              fullHeight: 440,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic19
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__ihxq9)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__i8TrL
                            )}
                          >
                            {
                              "\u0e1d\u0e32\u0e1a\u0e48\u0e2d\u0e08\u0e35\u0e1a\u0e40\u0e2b\u0e25\u0e47\u0e01\u0e2b\u0e25\u0e48\u0e2d 10 \u0e19\u0e34\u0e49\u0e27 [EMH-CA25]"
                            }
                          </div>
                        ),
                        value: args.slot19
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__wkBs)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__ujvPw
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__yRyTo)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__fgcAy)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/emhCa97Jpg.jpg",
                              fullWidth: 624,
                              fullHeight: 468,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic20
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__iyQNu)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__wPDrf
                            )}
                          >
                            {
                              "\u0e1d\u0e32\u0e41\u0e21\u0e19\u0e42\u0e2e\u0e25\u0e40\u0e2b\u0e25\u0e47\u0e01\u0e2b\u0e25\u0e48\u0e2d 970 \u0e21\u0e21. [EMH-CA97] \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e07\u0e32\u0e19\u0e40\u0e0b\u0e2d\u0e23\u0e4c\u0e27\u0e34\u0e2a\u0e41\u0e25\u0e30\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e1d\u0e32\u0e41\u0e21\u0e19\u0e42\u0e2e\u0e25"
                            }
                          </div>
                        ),
                        value: args.slot20
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__uYtiV)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__kj5Mq
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__yQyo0)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__yH2Ph)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/eebJpg.jpg",
                              fullWidth: 589,
                              fullHeight: 442,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic21
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__l9Hm6)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___5JztQ
                            )}
                          >
                            {
                              "Entry Boot \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e07\u0e32\u0e19\u0e40\u0e14\u0e34\u0e19\u0e17\u0e48\u0e2d\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19 [EEB]"
                            }
                          </div>
                        ),
                        value: args.slot21
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__hgCVt)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___9AbH9
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__xYhx2)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img___7O4Di)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/esdf622Jpg.jpg",
                              fullWidth: 598,
                              fullHeight: 449,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic22
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__ihzAh)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__zPnPu
                            )}
                          >
                            {
                              "PU Sealant [ESDF-622] \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e07\u0e32\u0e19\u0e15\u0e34\u0e14\u0e15\u0e31\u0e49\u0e07\u0e1d\u0e32\u0e04\u0e23\u0e2d\u0e1a Tank Sump \u0e41\u0e25\u0e30\u0e07\u0e32\u0e19\u0e0b\u0e35\u0e25\u0e23\u0e2d\u0e22\u0e23\u0e31\u0e48\u0e27\u0e15\u0e48\u0e32\u0e07\u0e46"
                            }
                          </div>
                        ),
                        value: args.slot22
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__abVxy)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___6AoPp
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__lNasq)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img___1HoRi)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/egk750Jpg.jpg",
                              fullWidth: 553,
                              fullHeight: 414,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic23
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__pidJv)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__qs3Or
                            )}
                          >
                            {
                              "\u0e1b\u0e23\u0e30\u0e40\u0e01\u0e47\u0e19\u0e41\u0e21\u0e19\u0e42\u0e2e\u0e25 75 \u0e0b\u0e21. [EGK-750]"
                            }
                          </div>
                        ),
                        value: args.slot23
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__r4Vis)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__zvSAi
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__p48W)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__qv5DO)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/egk7501Jpg.jpg",
                              fullWidth: 595,
                              fullHeight: 446,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic24
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__dAyEt)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__nRJ5
                            )}
                          >
                            {
                              "\u0e1b\u0e23\u0e30\u0e40\u0e01\u0e47\u0e19\u0e41\u0e21\u0e19\u0e42\u0e2e\u0e25 75 \u0e0b\u0e21. ( TEFLON ) [EGK-750-1]"
                            }
                          </div>
                        ),
                        value: args.slot24
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__oZwNo)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___4KgA
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__o0X1W)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__dUuo4)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/egk155Jpg.jpg",
                              fullWidth: 614,
                              fullHeight: 461,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic25
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__yP3Tf)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__w37IJ
                            )}
                          >
                            {
                              "\u0e1b\u0e23\u0e30\u0e40\u0e01\u0e47\u0e19\u0e2b\u0e19\u0e49\u0e32\u0e41\u0e1b\u0e25\u0e19 [EGK-1.5-5] \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e07\u0e32\u0e19\u0e15\u0e34\u0e14\u0e15\u0e31\u0e49\u0e07\u0e2b\u0e19\u0e49\u0e32\u0e41\u0e1b\u0e25\u0e19"
                            }
                          </div>
                        ),
                        value: args.slot25
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__k6Y83)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__eo9Y3
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__fGmAl)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__umbcw)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/egk1552Jpg.jpg",
                              fullWidth: 648,
                              fullHeight: 485,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic26
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__f4GM3)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__hwZm
                            )}
                          >
                            {
                              "\u0e1b\u0e23\u0e30\u0e40\u0e01\u0e47\u0e19\u0e2b\u0e19\u0e49\u0e32\u0e41\u0e1b\u0e25\u0e19 ( TEFLON ) [EGK-1.5-5]"
                            }
                          </div>
                        ),
                        value: args.slot26
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__luKx4)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__q0FYj
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__agF6X)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__cUlsk)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/egkJpg.jpg",
                              fullWidth: 580,
                              fullHeight: 435,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic27
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__ogs0)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__lUtun
                            )}
                          >
                            {
                              "\u0e2b\u0e19\u0e49\u0e32\u0e41\u0e1b\u0e25\u0e19\u0e1a\u0e2d\u0e23\u0e4c\u0e14 [EGK] \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e07\u0e32\u0e19\u0e40\u0e14\u0e34\u0e19\u0e17\u0e48\u0e2d"
                            }
                          </div>
                        ),
                        value: args.slot27
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__ocjGs)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___9PE2
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__u3Rm0)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__cVsJk)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/eslJpg.jpg",
                              fullWidth: 635,
                              fullHeight: 476,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic28
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__rmTy)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__dEryU
                            )}
                          >
                            {
                              "\u0e2b\u0e19\u0e49\u0e32\u0e41\u0e1b\u0e25\u0e19\u0e2a\u0e25\u0e35\u0e1b\u0e2d\u0e2d\u0e19 [ESL] \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e07\u0e32\u0e19\u0e40\u0e14\u0e34\u0e19\u0e17\u0e48\u0e2d"
                            }
                          </div>
                        ),
                        value: args.slot28
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__kc4Ad)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__sIb1
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__egY4)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img___5WAaD)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/sk121Jpg.jpg",
                              fullWidth: 594,
                              fullHeight: 445,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic29
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__znjVk)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__vj7HR
                            )}
                          >
                            {
                              "\u0e2b\u0e19\u0e49\u0e32\u0e41\u0e1b\u0e25\u0e19\u0e1a\u0e2d\u0e23\u0e4c\u0e14 [EGK] \u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e07\u0e32\u0e19\u0e40\u0e14\u0e34\u0e19\u0e17\u0e48\u0e2d"
                            }
                          </div>
                        ),
                        value: args.slot29
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__sjU1P)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___2QPeo
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__xoanl)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__oBoWw)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/tb121Jpg.jpg",
                              fullWidth: 564,
                              fullHeight: 423,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic30
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__sE4Db)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__i5R6A
                            )}
                          >
                            {
                              "Turn Buckle \u0e07\u0e32\u0e19\u0e15\u0e34\u0e14\u0e15\u0e31\u0e49\u0e07\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e43\u0e15\u0e49\u0e14\u0e34\u0e19 [TB-1/2-1\u201d]"
                            }
                          </div>
                        ),
                        value: args.slot30
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column___7EjDj)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__gb4Ft
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox___5LLc)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__hXy2)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/ps450Jpg.jpg",
                              fullWidth: 622,
                              fullHeight: 465,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic31
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__n2KsW)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__qn0Kq
                            )}
                          >
                            {
                              "\u0e2a\u0e25\u0e34\u0e07\u0e42\u0e1e\u0e25\u0e35\u0e40\u0e2d\u0e2a\u0e40\u0e15\u0e2d\u0e23\u0e4c (Polyester Sling) [PS-4.50]"
                            }
                          </div>
                        ),
                        value: args.slot31
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__cGuG4)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___4ImB6
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__fgHjd)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__pjZD)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/oringMhCa25Jpg.jpg",
                              fullWidth: 612,
                              fullHeight: 459,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic32
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__jUrse)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__fpKiE
                            )}
                          >
                            {
                              "\u0e42\u0e2d\u0e23\u0e34\u0e07\u0e1d\u0e32\u0e1a\u0e48\u0e2d\u0e08\u0e35\u0e1a\u0e40\u0e2b\u0e25\u0e47\u0e01\u0e2b\u0e25\u0e48\u0e2d 10 \u0e19\u0e34\u0e49\u0e27 [ORING-MH-CA25]"
                            }
                          </div>
                        ),
                        value: args.slot32
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__awiOu)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__lkmaL
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__ebmOg)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__vyN39)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/oringMhCa97Jpg.jpg",
                              fullWidth: 629,
                              fullHeight: 471,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic33
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__jdAMk)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__eMpp1
                            )}
                          >
                            {
                              "\u0e42\u0e2d\u0e23\u0e34\u0e07\u0e1d\u0e32\u0e41\u0e21\u0e19\u0e42\u0e2e\u0e25\u0e40\u0e2b\u0e25\u0e47\u0e01\u0e2b\u0e25\u0e48\u0e2d 970 \u0e21\u0e21. [ORING-MH-CA97]"
                            }
                          </div>
                        ),
                        value: args.slot33
                      })}
                    </Stack__>
                  </Stack__>
                </div>
              </Stack__>
            </Stack__>
          </Stack__>
          <Stack__
            as={"div"}
            data-plasmic-name={"potential"}
            data-plasmic-override={overrides.potential}
            hasGap={true}
            className={classNames(projectcss.all, sty.potential)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__vzuOs)}>
              <div className={classNames(projectcss.all, sty.freeBox__ug0PS)}>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"left2"}
                  data-plasmic-override={overrides.left2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.left2)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__j6J1I
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-Yq556PvPjGii)" }}
                        >
                          {
                            "\u0e15\u0e25\u0e2d\u0e14\u0e23\u0e30\u0e22\u0e30\u0e40\u0e27\u0e25\u0e32\u0e01\u0e27\u0e48\u0e32 50 \u0e1b\u0e35 \u0e01\u0e25\u0e38\u0e48\u0e21\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17\u0e1c\u0e14\u0e38\u0e07\u0e28\u0e34\u0e25\u0e1b\u0e4c\r\u00a0\u0e04\u0e37\u0e2d\u0e1c\u0e39\u0e49\u0e40\u0e0a\u0e35\u0e48\u0e22\u0e27\u0e0a\u0e32\u0e0d\u0e43\u0e19\u0e18\u0e38\u0e23\u0e01\u0e34\u0e08\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e04\u0e23\u0e1a\u0e27\u0e07\u0e08\u0e23"
                          }
                        </span>
                      </React.Fragment>
                    ) : (
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-LePsFgXAH3gN)" }}
                        >
                          {
                            "\u0e15\u0e25\u0e2d\u0e14\u0e23\u0e30\u0e22\u0e30\u0e40\u0e27\u0e25\u0e32\u0e01\u0e27\u0e48\u0e32 50 \u0e1b\u0e35 \u0e01\u0e25\u0e38\u0e48\u0e21\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17\u0e1c\u0e14\u0e38\u0e07\u0e28\u0e34\u0e25\u0e1b\u0e4c\r"
                          }
                        </span>
                        <React.Fragment>{"\n"}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-LePsFgXAH3gN)" }}
                        >
                          {
                            "\u0e04\u0e37\u0e2d\u0e1c\u0e39\u0e49\u0e40\u0e0a\u0e35\u0e48\u0e22\u0e27\u0e0a\u0e32\u0e0d\u0e43\u0e19\u0e18\u0e38\u0e23\u0e01\u0e34\u0e08\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e04\u0e23\u0e1a\u0e27\u0e07\u0e08\u0e23"
                          }
                        </span>
                      </React.Fragment>
                    )}
                  </h2>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__s7A8O
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>
                        {
                          "\u0e01\u0e25\u0e38\u0e48\u0e21\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17\u0e1c\u0e14\u0e38\u0e07\u0e28\u0e34\u0e25\u0e1b\u0e4c\u0e44\u0e14\u0e49\u0e1e\u0e31\u0e12\u0e19\u0e32\u0e41\u0e1a\u0e1a\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e43\u0e15\u0e49\u0e14\u0e34\u0e19\u0e41\u0e25\u0e30\u0e2d\u0e38\u0e1b\u0e01\u0e23\u0e13\u0e4c\u0e17\u0e35\u0e48\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e02\u0e49\u0e2d\u0e07\u0e15\u0e48\u0e32\u0e07\u0e46\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e15\u0e48\u0e2d\u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07 \u0e23\u0e27\u0e21\u0e17\u0e31\u0e49\u0e07\u0e22\u0e31\u0e07\u0e1e\u0e31\u0e12\u0e19\u0e32\u0e01\u0e32\u0e23\u0e01\u0e32\u0e23\u0e01\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19 \u0e43\u0e2b\u0e49\u0e44\u0e14\u0e49\u0e21\u0e32\u0e15\u0e23\u0e10\u0e32\u0e19\u0e2a\u0e39\u0e07\u0e2a\u0e38\u0e14 \u0e17\u0e31\u0e49\u0e07\u0e43\u0e19\u0e14\u0e49\u0e32\u0e19\u0e04\u0e38\u0e13\u0e20\u0e32\u0e1e \u0e41\u0e25\u0e30\u0e04\u0e27\u0e32\u0e21\u0e1b\u0e25\u0e2d\u0e14\u0e20\u0e31\u0e22 \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e25\u0e39\u0e01\u0e04\u0e49\u0e32 \u0e1c\u0e39\u0e49\u0e23\u0e31\u0e1a\u0e40\u0e2b\u0e21\u0e32 \u0e41\u0e25\u0e30 \u0e1c\u0e39\u0e49\u0e04\u0e49\u0e32\u0e2d\u0e37\u0e48\u0e19\u0e46 \u0e17\u0e35\u0e48\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e02\u0e49\u0e2d\u0e07\u0e01\u0e31\u0e1a\u0e07\u0e32\u0e19\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e20\u0e32\u0e22\u0e43\u0e15\u0e49\u0e19\u0e42\u0e22\u0e1a\u0e32\u0e22\u0e17\u0e35\u0e48\u0e27\u0e48\u0e32 "
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{
                          fontWeight: 700,
                          color: "var(--token-I9SVQgz08HdN)"
                        }}
                      >
                        {
                          "\u201d\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07 \u0e16\u0e39\u0e01\u0e15\u0e31\u0e07\u0e04\u0e4c \u0e17\u0e31\u0e19\u0e40\u0e27\u0e25\u0e32 \u0e1b\u0e25\u0e2d\u0e14\u0e20\u0e31\u0e22\u201d"
                        }
                      </span>
                    </React.Fragment>
                  </div>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__j7Kjj
                    )}
                    component={Link}
                    href={`/contact-us`}
                    platform={"nextjs"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__i9YT8)}
                        role={"img"}
                      />
                    ) : null}
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__cl5Gt)}
                        role={"img"}
                      />
                    ) : null}
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__aYk1P)}
                  >
                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : false
                    ) ? (
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___6UOkY
                        )}
                      >
                        <Test
                          className={classNames(
                            "__wab_instance",
                            sty.test__ktv0B
                          )}
                          slot={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__fZdkf
                              )}
                            >
                              {hasVariant(
                                globalVariants,
                                "screen",
                                "mobileOnly"
                              )
                                ? "0+"
                                : "300+"}
                            </div>
                          }
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__lz4IC
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "\u0e01\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19 (\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19)"
                              : "\u0e01\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19 (\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19)"}
                          </div>
                        </Test>
                        <Test
                          className={classNames(
                            "__wab_instance",
                            sty.test__tAuBb
                          )}
                          slot={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__xUix1
                              )}
                            >
                              {hasVariant(
                                globalVariants,
                                "screen",
                                "mobileOnly"
                              )
                                ? "0+"
                                : "300+"}
                            </div>
                          }
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__l0E51
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "\u0e1c\u0e25\u0e34\u0e15\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e43\u0e15\u0e49\u0e14\u0e34\u0e19\u0e1c\u0e19\u0e31\u0e072\u0e0a\u0e31\u0e49\u0e19 PERMATANK\u00ae (\u0e43\u0e1a)"
                              : "\u0e01\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19 (\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19)"}
                          </div>
                        </Test>
                        <Test
                          className={classNames(
                            "__wab_instance",
                            sty.test__wvfMz
                          )}
                          slot={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__lz4P8
                              )}
                            >
                              {hasVariant(
                                globalVariants,
                                "screen",
                                "mobileOnly"
                              )
                                ? "0+"
                                : "300+"}
                            </div>
                          }
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__wj1VL
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "\u0e08\u0e33\u0e2b\u0e19\u0e48\u0e32\u0e22\u0e41\u0e25\u0e30\u0e15\u0e34\u0e14\u0e15\u0e31\u0e49\u0e07\u0e17\u0e48\u0e2d\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e43\u0e15\u0e49\u0e14\u0e34\u0e19\u0e1c\u0e19\u0e31\u0e07 2 \u0e0a\u0e31\u0e49\u0e19\r (\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19)"
                              : "\u0e01\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19 (\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19)"}
                          </div>
                        </Test>
                        <Test
                          className={classNames(
                            "__wab_instance",
                            sty.test__lkJt
                          )}
                          slot={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ee6Zn
                              )}
                            >
                              {hasVariant(
                                globalVariants,
                                "screen",
                                "mobileOnly"
                              )
                                ? "0+"
                                : "300+"}
                            </div>
                          }
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__pkaYh
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "\u0e08\u0e33\u0e2b\u0e19\u0e48\u0e32\u0e22\u0e41\u0e25\u0e30\u0e15\u0e34\u0e14\u0e15\u0e31\u0e49\u0e07\u0e23\u0e30\u0e1a\u0e1a\u0e27\u0e31\u0e14\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e2d\u0e31\u0e15\u0e42\u0e19\u0e21\u0e31\u0e15\u0e34\u0e20\u0e32\u0e22\u0e43\u0e19\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19 (ATG)"
                              : "\u0e01\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19 (\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19)"}
                          </div>
                        </Test>
                        <Test
                          className={classNames(
                            "__wab_instance",
                            sty.test__z058F
                          )}
                          slot={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__fOuK4
                              )}
                            >
                              {"20,000+"}
                            </div>
                          }
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__qsVxc
                            )}
                          >
                            {
                              "\u0e1c\u0e25\u0e34\u0e15\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e43\u0e15\u0e49\u0e14\u0e34\u0e19\u0e1c\u0e19\u0e31\u0e072\u0e0a\u0e31\u0e49\u0e19 PERMATANK\u00ae (\u0e43\u0e1a)"
                            }
                          </div>
                        </Test>
                      </Stack__>
                    ) : null}
                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : false
                    ) ? (
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__cg9P
                        )}
                      >
                        <Test
                          className={classNames(
                            "__wab_instance",
                            sty.test__hItAf
                          )}
                          slot={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__phzNv
                              )}
                            >
                              {"300+"}
                            </div>
                          }
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___59YfN
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "\u0e08\u0e33\u0e2b\u0e19\u0e48\u0e32\u0e22\u0e41\u0e25\u0e30\u0e15\u0e34\u0e14\u0e15\u0e31\u0e49\u0e07\u0e17\u0e48\u0e2d\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e43\u0e15\u0e49\u0e14\u0e34\u0e19 \u0e1c\u0e19\u0e31\u0e07 2 \u0e0a\u0e31\u0e49\u0e19 (\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19)"
                              : "\u0e01\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19 (\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19)"}
                          </div>
                        </Test>
                        <Test
                          className={classNames(
                            "__wab_instance",
                            sty.test__rTt5G
                          )}
                          slot={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__c26Sn
                              )}
                            >
                              {hasVariant(
                                globalVariants,
                                "screen",
                                "mobileOnly"
                              )
                                ? "60+"
                                : "20,000+"}
                            </div>
                          }
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__n1Jv
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "\u0e08\u0e33\u0e2b\u0e19\u0e48\u0e32\u0e22\u0e41\u0e25\u0e30\u0e15\u0e34\u0e14\u0e15\u0e31\u0e49\u0e07\u0e23\u0e30\u0e1a\u0e1a\u0e27\u0e31\u0e14\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e2d\u0e31\u0e15\u0e42\u0e19\u0e21\u0e31\u0e15\u0e34\u0e20\u0e32\u0e22\u0e43\u0e19\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19 (ATG)"
                              : "\u0e1c\u0e25\u0e34\u0e15\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e43\u0e15\u0e49\u0e14\u0e34\u0e19\u0e1c\u0e19\u0e31\u0e072\u0e0a\u0e31\u0e49\u0e19 PERMATANK\u00ae (\u0e43\u0e1a)"}
                          </div>
                        </Test>
                      </Stack__>
                    ) : null}
                    <Test
                      className={classNames("__wab_instance", sty.test__uihy8)}
                      slot={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__j3R6K
                          )}
                        >
                          {"0+"}
                        </div>
                      }
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__kClay
                        )}
                      >
                        {
                          "\u0e01\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19 (\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19)"
                        }
                      </div>
                    </Test>
                    <Test
                      className={classNames("__wab_instance", sty.test__es3Yu)}
                      slot={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__pkZb
                          )}
                        >
                          {"0+"}
                        </div>
                      }
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__xwyYu
                        )}
                      >
                        {
                          "\u0e1c\u0e25\u0e34\u0e15\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e43\u0e15\u0e49\u0e14\u0e34\u0e19\u0e1c\u0e19\u0e31\u0e072\u0e0a\u0e31\u0e49\u0e19 PERMATANK\u00ae (\u0e43\u0e1a)"
                        }
                      </div>
                    </Test>
                    <Test
                      className={classNames("__wab_instance", sty.test__geuHt)}
                      slot={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__oJllv
                          )}
                        >
                          {"0+"}
                        </div>
                      }
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__diTms
                        )}
                      >
                        {
                          "\u0e08\u0e33\u0e2b\u0e19\u0e48\u0e32\u0e22\u0e41\u0e25\u0e30\u0e15\u0e34\u0e14\u0e15\u0e31\u0e49\u0e07\u0e17\u0e48\u0e2d\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e43\u0e15\u0e49\u0e14\u0e34\u0e19\u0e1c\u0e19\u0e31\u0e07 2 \u0e0a\u0e31\u0e49\u0e19\r (\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19)"
                        }
                      </div>
                    </Test>
                    <Test
                      className={classNames("__wab_instance", sty.test__mk1Me)}
                      slot={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__kqc5X
                          )}
                        >
                          {"0+"}
                        </div>
                      }
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ft9DB
                        )}
                      >
                        {
                          "\u0e08\u0e33\u0e2b\u0e19\u0e48\u0e32\u0e22\u0e41\u0e25\u0e30\u0e15\u0e34\u0e14\u0e15\u0e31\u0e49\u0e07\u0e23\u0e30\u0e1a\u0e1a\u0e27\u0e31\u0e14\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e2d\u0e31\u0e15\u0e42\u0e19\u0e21\u0e31\u0e15\u0e34\u0e20\u0e32\u0e22\u0e43\u0e19\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19 (ATG)"
                        }
                      </div>
                    </Test>
                  </Stack__>
                </Stack__>
              </div>
            </div>
          </Stack__>
          <Footer2
            data-plasmic-name={"footer2"}
            data-plasmic-override={overrides.footer2}
            className={classNames("__wab_instance", sty.footer2)}
          />
        </Stack__>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  page: [
    "page",
    "header3",
    "bannerHeader",
    "h1",
    "subHeader2",
    "foreground",
    "productAndService",
    "potential",
    "left2",
    "footer2"
  ],
  header3: ["header3"],
  bannerHeader: ["bannerHeader", "h1"],
  h1: ["h1"],
  subHeader2: ["subHeader2"],
  foreground: ["foreground"],
  productAndService: ["productAndService"],
  potential: ["potential", "left2"],
  left2: ["left2"],
  footer2: ["footer2"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  page: "div";
  header3: typeof Header3;
  bannerHeader: "div";
  h1: "h1";
  subHeader2: "div";
  foreground: "div";
  productAndService: "div";
  potential: "div";
  left2: "div";
  footer2: typeof Footer2;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicProductAndService5__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicProductAndService5__VariantsArgs;
    args?: PlasmicProductAndService5__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicProductAndService5__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicProductAndService5__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicProductAndService5__ArgProps,
          internalVariantPropNames: PlasmicProductAndService5__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicProductAndService5__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "page") {
    func.displayName = "PlasmicProductAndService5";
  } else {
    func.displayName = `PlasmicProductAndService5.${nodeName}`;
  }
  return func;
}

export const PlasmicProductAndService5 = Object.assign(
  // Top-level PlasmicProductAndService5 renders the root element
  makeNodeComponent("page"),
  {
    // Helper components rendering sub-elements
    header3: makeNodeComponent("header3"),
    bannerHeader: makeNodeComponent("bannerHeader"),
    h1: makeNodeComponent("h1"),
    subHeader2: makeNodeComponent("subHeader2"),
    foreground: makeNodeComponent("foreground"),
    productAndService: makeNodeComponent("productAndService"),
    potential: makeNodeComponent("potential"),
    left2: makeNodeComponent("left2"),
    footer2: makeNodeComponent("footer2"),

    // Metadata about props expected for PlasmicProductAndService5
    internalVariantProps: PlasmicProductAndService5__VariantProps,
    internalArgProps: PlasmicProductAndService5__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicProductAndService5;
/* prettier-ignore-end */
