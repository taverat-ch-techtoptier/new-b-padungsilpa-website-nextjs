// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: wauR2tk1hPNKxeSBCX7ndF
// Component: U5uof_mgInZI

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import Header3 from "../../Header3"; // plasmic-import: Fs6IO6-MbSpr/component
import Test from "../../Test"; // plasmic-import: N8x7vUKS4T3n/component
import ContactSectionFooterTop from "../../ContactSectionFooterTop"; // plasmic-import: 4arliTQcAY3d/component
import Footer2 from "../../Footer2"; // plasmic-import: 9pDOvBRTOpt9/component

import { useScreenVariants as useScreenVariants_2YPqM3KDWg } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: 2yPqM3-kD-WG/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: wauR2tk1hPNKxeSBCX7ndF/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: U5uof_mgInZI/css

import ChevronDownIcon from "./icons/PlasmicIcon__ChevronDown"; // plasmic-import: BJ5XRvZXvxF3/icon
import _14655891761535698998SvgIcon from "./icons/PlasmicIcon___14655891761535698998Svg"; // plasmic-import: YG3YAEM_AYjb/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: 8DjHUJI81s9x/icon

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {
  pic?: React.ReactNode;
  slot?: React.ReactNode;
  pic2?: React.ReactNode;
  slot2?: React.ReactNode;
  pic3?: React.ReactNode;
  slot3?: React.ReactNode;
  pic4?: React.ReactNode;
  slot4?: React.ReactNode;
  pic5?: React.ReactNode;
  slot5?: React.ReactNode;
  pic6?: React.ReactNode;
  slot6?: React.ReactNode;
};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>(
  "pic",
  "slot",
  "pic2",
  "slot2",
  "pic3",
  "slot3",
  "pic4",
  "slot4",
  "pic5",
  "slot5",
  "pic6",
  "slot6"
);

export type PlasmicHomepage__OverridesType = {
  root?: Flex__<"div">;
  header3?: Flex__<typeof Header3>;
  heroBanner?: Flex__<"div">;
  h1?: Flex__<"h1">;
  productAndService?: Flex__<"div">;
  foreground2?: Flex__<"div">;
  whyUs?: Flex__<"div">;
  foreground?: Flex__<"div">;
  img?: Flex__<typeof PlasmicImg__>;
  h3?: Flex__<"h3">;
  potential?: Flex__<"div">;
  left2?: Flex__<"div">;
  contactSectionFooterTop?: Flex__<typeof ContactSectionFooterTop>;
  footer2?: Flex__<typeof Footer2>;
};

export interface DefaultHomepageProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants_2YPqM3KDWg()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <Stack__
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.root
          )}
        >
          <Header3
            data-plasmic-name={"header3"}
            data-plasmic-override={overrides.header3}
            className={classNames("__wab_instance", sty.header3)}
          />

          <div
            data-plasmic-name={"heroBanner"}
            data-plasmic-override={overrides.heroBanner}
            className={classNames(projectcss.all, sty.heroBanner)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__m095T)}>
              <div className={classNames(projectcss.all, sty.freeBox__vLwl0)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__jTdtB)}
                >
                  <h1
                    data-plasmic-name={"h1"}
                    data-plasmic-override={overrides.h1}
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>
                        {
                          "\u0e15\u0e25\u0e2d\u0e14\u0e23\u0e30\u0e22\u0e30\u0e40\u0e27\u0e25\u0e32\u0e01\u0e27\u0e48\u0e32\u0e2b\u0e25\u0e32\u0e22\u0e1b\u0e35 \n\u0e01\u0e25\u0e38\u0e48\u0e21\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17\u0e1c\u0e14\u0e38\u0e07\u0e28\u0e34\u0e25\u0e1b\u0e4c\n\u0e04\u0e37\u0e2d "
                        }
                      </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#EDAE49", fontWeight: 700 }}
                      >
                        {
                          "\u0e1c\u0e39\u0e49\u0e40\u0e0a\u0e35\u0e48\u0e22\u0e27\u0e0a\u0e32\u0e0d\u0e43\u0e19\u0e18\u0e38\u0e23\u0e01\u0e34\u0e08\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23"
                        }
                      </span>
                      <React.Fragment>{"\n"}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#EDAE49", fontWeight: 700 }}
                      >
                        {
                          "\u0e19\u0e33\u0e49\u0e21\u0e31\u0e19\u0e04\u0e23\u0e1a\u0e27\u0e07\u0e08\u0e23"
                        }
                      </span>
                    </React.Fragment>
                  </h1>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ixWv6
                    )}
                  >
                    {
                      "\u0e40\u0e23\u0e32\u0e22\u0e34\u0e19\u0e14\u0e35\u0e43\u0e2b\u0e49\u0e04\u0e33\u0e1b\u0e23\u0e36\u0e01\u0e29\u0e32\u0e17\u0e38\u0e01\u0e40\u0e23\u0e37\u0e48\u0e2d\u0e07\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e01\u0e31\u0e1a\u0e18\u0e38\u0e23\u0e01\u0e34\u0e08\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19"
                    }
                  </div>
                </Stack__>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox___0Yd21)}>
                <div className={classNames(projectcss.all, sty.freeBox__lqj8)}>
                  <ChevronDownIcon
                    className={classNames(projectcss.all, sty.svg__yMpz)}
                    role={"img"}
                  />
                </div>
              </div>
            </div>
          </div>
          <Stack__
            as={"div"}
            data-plasmic-name={"productAndService"}
            data-plasmic-override={overrides.productAndService}
            hasGap={true}
            className={classNames(projectcss.all, sty.productAndService)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__aw9KO)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"foreground2"}
                data-plasmic-override={overrides.foreground2}
                hasGap={true}
                className={classNames(projectcss.all, sty.foreground2)}
              >
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__lcMkQ
                  )}
                >
                  {
                    "\u0e2a\u0e34\u0e19\u0e04\u0e49\u0e32\u0e41\u0e25\u0e30\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23"
                  }
                </h2>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__sP7LR
                  )}
                >
                  {
                    "\u0e15\u0e25\u0e2d\u0e14\u0e23\u0e30\u0e22\u0e30\u0e40\u0e27\u0e25\u0e32\u0e01\u0e27\u0e48\u0e32\u0e2b\u0e25\u0e32\u0e22\u0e1b\u0e35 \u0e01\u0e25\u0e38\u0e48\u0e21\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17\u0e1c\u0e14\u0e38\u0e07\u0e28\u0e34\u0e25\u0e1b\u0e4c \u0e04\u0e37\u0e2d\u0e1c\u0e39\u0e49\u0e40\u0e0a\u0e35\u0e48\u0e22\u0e27\u0e0a\u0e32\u0e0d\u0e43\u0e19\u0e18\u0e38\u0e23\u0e01\u0e34\u0e08\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e04\u0e23\u0e1a\u0e27\u0e07\u0e08\u0e23 \u0e1b\u0e31\u0e08\u0e08\u0e38\u0e1a\u0e31\u0e19\u0e40\u0e23\u0e32\u0e21\u0e35\u0e2a\u0e34\u0e19\u0e04\u0e49\u0e32\u0e41\u0e25\u0e30\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e17\u0e35\u0e48\u0e15\u0e2d\u0e1a\u0e2a\u0e19\u0e2d\u0e07\u0e04\u0e27\u0e32\u0e21\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e02\u0e2d\u0e07\u0e01\u0e25\u0e38\u0e48\u0e21\u0e25\u0e39\u0e01\u0e04\u0e49\u0e32 \u0e14\u0e31\u0e07\u0e15\u0e48\u0e2d\u0e44\u0e1b\u0e19\u0e35\u0e49"
                  }
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__nuHoq)}
              >
                <div className={classNames(projectcss.all, sty.column__hdye3)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___6Xocp
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__uOwiP)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__kXSn7)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/_4664413729649586456683132441591559472871573NJpg.jpg",
                              fullWidth: 2048,
                              fullHeight: 1536,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__vlzVi)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <React.Fragment>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__h3RYj
                              )}
                            >
                              {
                                "\u0e07\u0e32\u0e19\u0e01\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19"
                              }
                            </div>
                            <Stack__
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__daomU
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__kUkcE
                                )}
                              >
                                <_14655891761535698998SvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__nbp55
                                  )}
                                  role={"img"}
                                />
                              </div>
                              <Stack__
                                as={"div"}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__qgTR
                                )}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text___0IdE
                                  )}
                                >
                                  {
                                    "\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 \u0e1c\u0e14\u0e38\u0e07\u0e28\u0e34\u0e25\u0e1b\u0e4c\u0e42\u0e22\u0e18\u0e32\u0e01\u0e32\u0e23 \u0e08\u0e33\u0e01\u0e31\u0e14 (PCW) \u0e40\u0e1b\u0e47\u0e19\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17\u0e2f\u0e01\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e0a\u0e31\u0e49\u0e19\u0e19\u0e33\u0e17\u0e35\u0e48\u0e40\u0e0a\u0e35\u0e48\u0e22\u0e27\u0e0a\u0e32\u0e0d\u0e41\u0e25\u0e30\u0e21\u0e32\u0e01\u0e14\u0e49\u0e27\u0e1b\u0e23\u0e30\u0e2a\u0e1a\u0e01\u0e32\u0e23\u0e13\u0e4c\u0e43\u0e19\u0e07\u0e32\u0e19\u0e01\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19 \u0e41\u0e25\u0e30\u0e01\u0e4a\u0e32\u0e0b \u0e15\u0e25\u0e2d\u0e14\u0e08\u0e19\u0e07\u0e32\u0e19\u0e2d\u0e37\u0e48\u0e19\u0e46\u0e17\u0e35\u0e48\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e02\u0e49\u0e2d\u0e07 \u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e32\u0e01\u0e21\u0e35\u0e1c\u0e25\u0e07\u0e32\u0e19\u0e40\u0e1b\u0e47\u0e19\u0e17\u0e35\u0e48\u0e40\u0e0a\u0e37\u0e48\u0e2d\u0e16\u0e37\u0e2d \u0e41\u0e25\u0e30\u0e44\u0e14\u0e49\u0e23\u0e31\u0e1a\u0e04\u0e27\u0e32\u0e21\u0e44\u0e27\u0e49\u0e27\u0e32\u0e07\u0e43\u0e08 \u0e08\u0e32\u0e01\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e0a\u0e31\u0e49\u0e19\u0e19\u0e33"
                                  }
                                </div>
                              </Stack__>
                            </Stack__>
                          </React.Fragment>
                        ),
                        value: args.slot
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__rRpA)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__nvPdd
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__bWPbJ)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__uvrqG)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/_29120584053472534086876881457757044295190479NJpg.jpg",
                              fullWidth: 800,
                              fullHeight: 600,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic2
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__bunZw)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <React.Fragment>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__r8Su7
                              )}
                            >
                              {
                                "\u0e08\u0e33\u0e2b\u0e19\u0e48\u0e32\u0e22\u0e41\u0e25\u0e30\u0e15\u0e34\u0e14\u0e15\u0e31\u0e49\u0e07\u0e17\u0e48\u0e2d\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e43\u0e15\u0e49\u0e14\u0e34\u0e19\u0e1c\u0e19\u0e31\u0e07 2 \u0e0a\u0e31\u0e49\u0e19"
                              }
                            </div>
                            <Stack__
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__wVomb
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__gAOd
                                )}
                              >
                                <_14655891761535698998SvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__xx2Gu
                                  )}
                                  role={"img"}
                                />
                              </div>
                              <Stack__
                                as={"div"}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__kAhhZ
                                )}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text___3M9Gl
                                  )}
                                >
                                  {
                                    "\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17\u0e2f \u0e22\u0e31\u0e07\u0e44\u0e14\u0e49\u0e17\u0e33\u0e01\u0e32\u0e23\u0e02\u0e32\u0e22\u0e41\u0e25\u0e30\u0e15\u0e34\u0e14\u0e15\u0e31\u0e49\u0e07\u0e17\u0e48\u0e2d\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e1c\u0e19\u0e31\u0e07 2 \u0e0a\u0e31\u0e49\u0e19 \u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e23\u0e31\u0e1a\u0e23\u0e2d\u0e07\u0e08\u0e32\u0e01\u0e01\u0e23\u0e21\u0e18\u0e38\u0e23\u0e01\u0e34\u0e08\u0e1e\u0e25\u0e31\u0e07\u0e07\u0e32\u0e19"
                                  }
                                </div>
                              </Stack__>
                            </Stack__>
                          </React.Fragment>
                        ),
                        value: args.slot2
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__chPhs)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__fIKfR
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__bbKn)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__hlE7D)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/_4444833488493994405575683439209113144118689NJpg.jpg",
                              fullWidth: 1479,
                              fullHeight: 1109,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic3
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__b5J85)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <React.Fragment>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___135S3
                              )}
                            >
                              {
                                "PERMATANK \u0e41\u0e25\u0e30\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e41\u0e1a\u0e1a \u0e15\u0e48\u0e32\u0e07\u0e46"
                              }
                            </div>
                            <Stack__
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___9WgEj
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__czAdh
                                )}
                              >
                                <_14655891761535698998SvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__oFwv9
                                  )}
                                  role={"img"}
                                />
                              </div>
                              <Stack__
                                as={"div"}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__r2Ivy
                                )}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__ycIhu
                                  )}
                                >
                                  {
                                    "\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e43\u0e15\u0e49\u0e14\u0e34\u0e19\u0e41\u0e1a\u0e1a\u0e1c\u0e19\u0e31\u0e07 2 \u0e0a\u0e31\u0e49\u0e19\u0e02\u0e2d\u0e07\u00a0\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 \u0e1c\u0e14\u0e38\u0e07\u0e28\u0e34\u0e25\u0e1b\u0e4c\u0e27\u0e34\u0e28\u0e27\u0e01\u0e32\u0e23 \u0e08\u0e33\u0e01\u0e31\u0e14 \u0e1c\u0e25\u0e34\u0e15\u0e15\u0e32\u0e21\u0e21\u0e32\u0e15\u0e23\u0e10\u0e32\u0e19\u0e02\u0e2d\u0e07 UL \u0e41\u0e25\u0e30 STEEL TANK INSTITUTE Technology \u0e16\u0e31\u0e07\u0e21\u0e35\u0e04\u0e27\u0e32\u0e21\u0e41\u0e02\u0e47\u0e07\u0e41\u0e23\u0e07 \u0e17\u0e19\u0e17\u0e32\u0e19 \u0e21\u0e35\u0e04\u0e38\u0e13\u0e20\u0e32\u0e1e \u0e21\u0e35\u0e2d\u0e32\u0e22\u0e38\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19\u0e22\u0e32\u0e27\u0e19\u0e32\u0e19\u0e16\u0e36\u0e07\u0e01\u0e27\u0e48\u0e32 30 \u0e1b\u0e35"
                                  }
                                </div>
                              </Stack__>
                            </Stack__>
                          </React.Fragment>
                        ),
                        value: args.slot3
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__b6SF)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__xO6U4
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__bspGn)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__dwv3T)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/atgNewJpg.jpg",
                              fullWidth: 1600,
                              fullHeight: 900,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic4
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__rneRt)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <React.Fragment>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__rQ7K
                              )}
                            >
                              {
                                "\u0e23\u0e30\u0e1a\u0e1a\u0e27\u0e31\u0e14\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e2d\u0e31\u0e15\u0e42\u0e19\u0e21\u0e31\u0e15\u0e34\u0e20\u0e32\u0e22\u0e43\u0e19\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19"
                              }
                            </div>
                            <Stack__
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__jNHit
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__x2XUk
                                )}
                              >
                                <_14655891761535698998SvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__bejH5
                                  )}
                                  role={"img"}
                                />
                              </div>
                              <Stack__
                                as={"div"}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__fRvGe
                                )}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__xbehx
                                  )}
                                >
                                  {
                                    "\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 \u0e1c\u0e14\u0e38\u0e07\u0e28\u0e34\u0e25\u0e1b\u0e4c\u0e27\u0e34\u0e28\u0e27\u0e01\u0e32\u0e23 \u0e08\u0e33\u0e01\u0e31\u0e14 (PSE)\u00a0\u0e40\u0e1b\u0e47\u0e19\u0e15\u0e31\u0e27\u0e41\u0e17\u0e19\u0e08\u0e33\u0e2b\u0e19\u0e48\u0e32\u0e22\u0e41\u0e25\u0e30\u0e15\u0e34\u0e14\u0e15\u0e31\u0e49\u0e07\u0e23\u0e30\u0e1a\u0e1a\u0e27\u0e31\u0e14\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e2d\u0e31\u0e15\u0e42\u0e19\u0e21\u0e31\u0e15\u0e34\u0e20\u0e32\u0e22\u0e43\u0e19\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19"
                                  }
                                </div>
                              </Stack__>
                            </Stack__>
                          </React.Fragment>
                        ),
                        value: args.slot4
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__ujXb)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__fZy3W
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__ffANc)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__hBxgp)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/_16962945840002154633914967365690975083369688NJpg.jpg",
                              fullWidth: 1600,
                              fullHeight: 1200,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic5
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__id86I)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <React.Fragment>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__pw8WY
                              )}
                            >
                              {
                                "\u0e2d\u0e38\u0e1b\u0e01\u0e23\u0e13\u0e4c\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e01\u0e31\u0e1a\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19"
                              }
                            </div>
                            <Stack__
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__pbn35
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__sfr9V
                                )}
                              >
                                <_14655891761535698998SvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__reGo
                                  )}
                                  role={"img"}
                                />
                              </div>
                              <Stack__
                                as={"div"}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__qBzPq
                                )}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__kkC6
                                  )}
                                >
                                  {
                                    "\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 \u0e1c\u0e14\u0e38\u0e07\u0e28\u0e34\u0e25\u0e1b\u0e4c\u0e27\u0e34\u0e28\u0e27\u0e01\u0e32\u0e23 \u0e08\u0e33\u0e01\u0e31\u0e14 (PSE)\u00a0\u0e1e\u0e31\u0e12\u0e19\u0e32\u0e41\u0e1a\u0e1a\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e43\u0e15\u0e49\u0e14\u0e34\u0e19 \u0e41\u0e25\u0e30\u0e2d\u0e38\u0e1b\u0e01\u0e23\u0e13\u0e4c\u0e17\u0e35\u0e48\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e02\u0e49\u0e2d\u0e07\u0e15\u0e48\u0e32\u0e07\u0e46 \u0e2d\u0e22\u0e48\u0e32\u0e07\u0e15\u0e48\u0e2d\u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07"
                                  }
                                </div>
                              </Stack__>
                            </Stack__>
                          </React.Fragment>
                        ),
                        value: args.slot5
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column___7ToF)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___4Qrh7
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__qBS4)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__wtIbY)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/_3149430817600204340776888085103392998817792NJpg.jpg",
                              fullWidth: 960,
                              fullHeight: 720,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic6
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__zJfr)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <React.Fragment>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__o8OWl
                              )}
                            >
                              {
                                "\u0e43\u0e2b\u0e49\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e15\u0e48\u0e32\u0e07\u0e46\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e01\u0e31\u0e1a\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19"
                              }
                            </div>
                            <Stack__
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__xgRkw
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox___8LRl9
                                )}
                              >
                                <_14655891761535698998SvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__no372
                                  )}
                                  role={"img"}
                                />
                              </div>
                              <Stack__
                                as={"div"}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__md7Z1
                                )}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__gpVvX
                                  )}
                                >
                                  {
                                    "\u2022 \u0e07\u0e32\u0e19\u0e1d\u0e31\u0e07\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e43\u0e15\u0e49\u0e14\u0e34\u0e19\u0e1c\u0e19\u0e31\u0e07 2 \u0e0a\u0e31\u0e49\u0e19 PERMATANK\u00ae\n\u2022 \u0e07\u0e32\u0e19\u0e15\u0e34\u0e14\u0e15\u0e31\u0e49\u0e07\u0e17\u0e48\u0e2d\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19 2 \u0e0a\u0e31\u0e49\u0e19 \u0e22\u0e35\u0e48\u0e2b\u0e49\u0e2d NUPI \u0e43\u0e19\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\n\u2022 \u0e07\u0e32\u0e19\u0e15\u0e23\u0e27\u0e08\u0e40\u0e0a\u0e47\u0e04\u0e23\u0e30\u0e1a\u0e1a\u0e17\u0e48\u0e2d \u0e41\u0e25\u0e30\u0e01\u0e32\u0e23\u0e23\u0e31\u0e48\u0e27\u0e0b\u0e36\u0e21\u0e02\u0e2d\u0e07\u0e17\u0e48\u0e2d\u0e08\u0e48\u0e32\u0e22\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19"
                                  }
                                </div>
                              </Stack__>
                            </Stack__>
                          </React.Fragment>
                        ),
                        value: args.slot6
                      })}
                    </Stack__>
                  </Stack__>
                </div>
              </Stack__>
            </Stack__>
          </Stack__>
          <Stack__
            as={"div"}
            data-plasmic-name={"whyUs"}
            data-plasmic-override={overrides.whyUs}
            hasGap={true}
            className={classNames(projectcss.all, sty.whyUs)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__mK5F1)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"foreground"}
                data-plasmic-override={overrides.foreground}
                hasGap={true}
                className={classNames(projectcss.all, sty.foreground)}
              >
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__fRXmf
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>
                      {
                        "\u0e17\u0e33\u0e44\u0e21\u0e01\u0e25\u0e38\u0e48\u0e21\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 \n\u0e1c\u0e14\u0e38\u0e07\u0e28\u0e34\u0e25\u0e1b\u0e4c\u0e16\u0e36\u0e07\u0e40\u0e1b\u0e47\u0e19\u00a0"
                      }
                    </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "var(--token-Om8MnecN_61Q)" }}
                    >
                      {
                        "\u0e15\u0e31\u0e27\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e17\u0e35\u0e48\u0e14\u0e35\u0e17\u0e35\u0e48\u0e2a\u0e38\u0e14"
                      }
                    </span>
                    <React.Fragment>
                      {"\u00a0\u0e02\u0e2d\u0e07\u0e17\u0e48\u0e32\u0e19"}
                    </React.Fragment>
                  </React.Fragment>
                </h2>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___3K3Ph
                  )}
                >
                  {
                    "\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e43\u0e15\u0e49\u0e14\u0e34\u0e19\u0e08\u0e32\u0e01 \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 \u0e1c\u0e14\u0e38\u0e07\u0e28\u0e34\u0e25\u0e1b\u0e4c\u0e27\u0e34\u0e28\u0e27\u0e01\u0e32\u0e23 \u0e08\u0e33\u0e01\u0e31\u0e14 \u0e21\u0e35\u0e04\u0e38\u0e13\u0e20\u0e32\u0e1e\u0e2a\u0e39\u0e07 \u0e01\u0e32\u0e23\u0e31\u0e19\u0e15\u0e35\u0e08\u0e32\u0e01\u0e01\u0e32\u0e23\u0e44\u0e14\u0e49\u0e23\u0e31\u0e1a\u0e23\u0e32\u0e07\u0e27\u0e31\u0e25 STI PERMATANK TOP PRODUCER OF THE DECADE \u0e41\u0e25\u0e30 DIAMOND QUALITY\u00a0 AWARD \u0e08\u0e32\u0e01 STI/SPFA"
                  }
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns___69AF2)}
              >
                <div className={classNames(projectcss.all, sty.column__ko8Em)}>
                  <PlasmicImg__
                    data-plasmic-name={"img"}
                    data-plasmic-override={overrides.img}
                    alt={""}
                    className={classNames(sty.img)}
                    displayHeight={"100%"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"auto"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/psd_j/images/padungsilpaGroup05Pf08786Jpg.jpg",
                      fullWidth: 1753,
                      fullHeight: 1238,
                      aspectRatio: undefined
                    }}
                  />
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__qQaF)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__jSvjK)}
                  >
                    <h3
                      data-plasmic-name={"h3"}
                      data-plasmic-override={overrides.h3}
                      className={classNames(
                        projectcss.all,
                        projectcss.h3,
                        projectcss.__wab_text,
                        sty.h3
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? '"\u0e04\u0e38\u0e13\u0e20\u0e32\u0e1e\u0e41\u0e25\u0e30\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e40\u0e2b\u0e19\u0e37\u0e2d\u0e23\u0e30\u0e14\u0e31\u0e1a \u0e0b\u0e37\u0e48\u0e2d\u0e2a\u0e31\u0e15\u0e22\u0e4c \u0e08\u0e23\u0e34\u0e07\u0e43\u0e08 \u0e41\u0e25\u0e30\u0e43\u0e2a\u0e48\u0e43\u0e08\u0e2a\u0e34\u0e48\u0e07\u0e41\u0e27\u0e14\u0e25\u0e49\u0e2d\u0e21"'
                        : '"\u0e04\u0e38\u0e13\u0e20\u0e32\u0e1e\u0e41\u0e25\u0e30\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e40\u0e2b\u0e19\u0e37\u0e2d\u0e23\u0e30\u0e14\u0e31\u0e1a \u0e0b\u0e37\u0e48\u0e2d\u0e2a\u0e31\u0e15\u0e22\u0e4c \u0e08\u0e23\u0e34\u0e07\u0e43\u0e08 \u0e41\u0e25\u0e30\u0e43\u0e2a\u0e48\u0e43\u0e08\u0e2a\u0e34\u0e48\u0e07\u0e41\u0e27\u0e14\u0e25\u0e49\u0e2d\u0e21"'}
                    </h3>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xFqe
                      )}
                    >
                      {
                        "\u0e40\u0e23\u0e32\u0e21\u0e38\u0e48\u0e07\u0e21\u0e31\u0e48\u0e19\u0e17\u0e35\u0e48\u0e08\u0e30\u0e21\u0e2d\u0e1a \u0e21\u0e32\u0e15\u0e23\u0e10\u0e32\u0e19\u0e2a\u0e39\u0e07\u0e2a\u0e38\u0e14\u0e02\u0e2d\u0e07\u0e04\u0e27\u0e32\u0e21\u0e0a\u0e33\u0e19\u0e32\u0e0d\u0e07\u0e32\u0e19 \u0e41\u0e25\u0e30\u0e04\u0e38\u0e13\u0e20\u0e32\u0e1e \u0e14\u0e49\u0e27\u0e22\u0e04\u0e27\u0e32\u0e21\u0e0b\u0e37\u0e48\u0e2d\u0e2a\u0e31\u0e15\u0e22\u0e4c\u0e08\u0e23\u0e34\u0e07\u0e43\u0e08 \u0e40\u0e1b\u0e47\u0e19\u0e01\u0e31\u0e19\u0e40\u0e2d\u0e07 \u0e15\u0e23\u0e07\u0e40\u0e27\u0e25\u0e32 \u0e41\u0e25\u0e30 \u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e21\u0e37\u0e2d\u0e2d\u0e32\u0e0a\u0e35\u0e1e"
                      }
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___80JZf
                      )}
                    >
                      {
                        "\u0e40\u0e23\u0e32\u0e21\u0e38\u0e48\u0e07\u0e40\u0e19\u0e49\u0e19\u0e17\u0e35\u0e48 \u0e08\u0e30\u0e19\u0e33\u0e40\u0e2a\u0e19\u0e2d\u0e07\u0e32\u0e19\u0e01\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07 \u0e07\u0e32\u0e19\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23 \u0e2a\u0e34\u0e19\u0e04\u0e49\u0e32 \u0e41\u0e25\u0e30\u0e2d\u0e38\u0e1b\u0e01\u0e23\u0e13\u0e4c\u0e15\u0e48\u0e32\u0e07\u0e46 \u0e43\u0e19\u0e23\u0e32\u0e04\u0e32\u0e17\u0e35\u0e48\u0e40\u0e1b\u0e47\u0e19\u0e18\u0e23\u0e23\u0e21\u0e41\u0e25\u0e30\u0e41\u0e02\u0e48\u0e07\u0e02\u0e31\u0e19\u0e44\u0e14\u0e49 \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e1a\u0e23\u0e23\u0e25\u0e38\u0e1c\u0e25\u0e01\u0e33\u0e44\u0e23\u0e17\u0e35\u0e48\u0e2a\u0e21\u0e40\u0e2b\u0e15\u0e38\u0e2a\u0e21\u0e1c\u0e25 \u0e17\u0e31\u0e49\u0e07\u0e15\u0e48\u0e2d\u0e25\u0e39\u0e01\u0e04\u0e49\u0e32 \u0e41\u0e25\u0e30\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17\u0e40\u0e2d\u0e07"
                      }
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__g9Bg9
                      )}
                    >
                      {
                        "\u0e40\u0e23\u0e32\u0e08\u0e30\u0e43\u0e2b\u0e49\u0e04\u0e27\u0e32\u0e21\u0e2a\u0e33\u0e04\u0e31\u0e0d \u0e41\u0e25\u0e30\u0e16\u0e37\u0e2d\u0e40\u0e1b\u0e47\u0e19\u0e1e\u0e31\u0e19\u0e18\u0e01\u0e23\u0e13\u0e35\u0e17\u0e35\u0e48\u0e08\u0e30\u0e1b\u0e01\u0e1b\u0e49\u0e2d\u0e07\u0e23\u0e31\u0e01\u0e29\u0e32\u0e2a\u0e38\u0e02\u0e20\u0e32\u0e1e\u0e41\u0e25\u0e30\u0e04\u0e27\u0e32\u0e21\u0e1b\u0e25\u0e2d\u0e14\u0e20\u0e31\u0e22 \u0e02\u0e2d\u0e07\u0e1e\u0e19\u0e31\u0e01\u0e07\u0e32\u0e19 \u0e25\u0e39\u0e01\u0e04\u0e49\u0e32\u0e41\u0e25\u0e30 \u0e1c\u0e39\u0e49\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e02\u0e49\u0e2d\u0e07\u0e01\u0e31\u0e1a\u0e18\u0e38\u0e23\u0e01\u0e34\u0e08 \u0e15\u0e25\u0e2d\u0e14\u0e08\u0e19\u0e23\u0e31\u0e1a\u0e1c\u0e34\u0e14\u0e0a\u0e2d\u0e1a\u0e15\u0e48\u0e2d\u0e01\u0e32\u0e23\u0e1e\u0e34\u0e17\u0e31\u0e01\u0e29\u0e4c\u0e23\u0e31\u0e01\u0e29\u0e32\u0e2a\u0e20\u0e32\u0e1e\u0e41\u0e27\u0e14\u0e25\u0e49\u0e2d\u0e21\u0e02\u0e2d\u0e07\u0e2a\u0e48\u0e27\u0e19\u0e23\u0e27\u0e21"
                      }
                    </div>
                  </Stack__>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link___1LGjc
                    )}
                    component={Link}
                    href={`/`}
                    platform={"nextjs"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg___5ZMTv)}
                        role={"img"}
                      />
                    ) : null}
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__osD0V
                      )}
                    >
                      {"\u0e2d\u0e48\u0e32\u0e19\u0e15\u0e48\u0e2d"}
                    </div>
                  </Stack__>
                </Stack__>
              </Stack__>
            </Stack__>
          </Stack__>
          <Stack__
            as={"div"}
            data-plasmic-name={"potential"}
            data-plasmic-override={overrides.potential}
            hasGap={true}
            className={classNames(projectcss.all, sty.potential)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__mcGyL)}>
              <div className={classNames(projectcss.all, sty.freeBox__hzvso)}>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"left2"}
                  data-plasmic-override={overrides.left2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.left2)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__rxXqb
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                      <React.Fragment>
                        <React.Fragment>
                          {
                            "\u0e15\u0e25\u0e2d\u0e14\u0e23\u0e30\u0e22\u0e30\u0e40\u0e27\u0e25\u0e32\u0e01\u0e27\u0e48\u0e32\u0e2b\u0e25\u0e32\u0e22\u0e1b\u0e35 \u0e01\u0e25\u0e38\u0e48\u0e21\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17\u0e1c\u0e14\u0e38\u0e07\u0e28\u0e34\u0e25\u0e1b\u0e4c \u0e04\u0e37\u0e2d "
                          }
                        </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-I9SVQgz08HdN)" }}
                        >
                          {
                            "\u0e1c\u0e39\u0e49\u0e40\u0e0a\u0e35\u0e48\u0e22\u0e27\u0e0a\u0e32\u0e0d\u0e43\u0e19\u0e18\u0e38\u0e23\u0e01\u0e34\u0e08\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e04\u0e23\u0e1a\u0e27\u0e07\u0e08\u0e23"
                          }
                        </span>
                      </React.Fragment>
                    ) : (
                      <React.Fragment>
                        <React.Fragment>
                          {
                            "\u0e15\u0e25\u0e2d\u0e14\u0e23\u0e30\u0e22\u0e30\u0e40\u0e27\u0e25\u0e32\u0e01\u0e27\u0e48\u0e32\u0e2b\u0e25\u0e32\u0e22\u0e1b\u0e35 \u0e01\u0e25\u0e38\u0e48\u0e21\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17\u0e1c\u0e14\u0e38\u0e07\u0e28\u0e34\u0e25\u0e1b\u0e4c \n\u0e04\u0e37\u0e2d "
                          }
                        </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "var(--token-I9SVQgz08HdN)" }}
                        >
                          {
                            "\u0e1c\u0e39\u0e49\u0e40\u0e0a\u0e35\u0e48\u0e22\u0e27\u0e0a\u0e32\u0e0d\u0e43\u0e19\u0e18\u0e38\u0e23\u0e01\u0e34\u0e08\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e04\u0e23\u0e1a\u0e27\u0e07\u0e08\u0e23"
                          }
                        </span>
                      </React.Fragment>
                    )}
                  </h2>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__b3RDe
                    )}
                  >
                    {
                      "\u0e01\u0e25\u0e38\u0e48\u0e21\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17\u0e1c\u0e14\u0e38\u0e07\u0e28\u0e34\u0e25\u0e1b\u0e4c\u0e44\u0e14\u0e49\u0e1e\u0e31\u0e12\u0e19\u0e32\u0e41\u0e1a\u0e1a\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e43\u0e15\u0e49\u0e14\u0e34\u0e19\u0e41\u0e25\u0e30\u0e2d\u0e38\u0e1b\u0e01\u0e23\u0e13\u0e4c\u0e17\u0e35\u0e48\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e02\u0e49\u0e2d\u0e07\u0e15\u0e48\u0e32\u0e07\u0e46\u0e2d\u0e22\u0e48\u0e32\u0e07\u0e15\u0e48\u0e2d\u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07 \u0e23\u0e27\u0e21\u0e17\u0e31\u0e49\u0e07\u0e22\u0e31\u0e07\u0e1e\u0e31\u0e12\u0e19\u0e32\u0e01\u0e32\u0e23\u0e01\u0e32\u0e23\u0e01\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u00a0\u0e43\u0e2b\u0e49\u0e44\u0e14\u0e49\u0e21\u0e32\u0e15\u0e23\u0e10\u0e32\u0e19\u0e2a\u0e39\u0e07\u0e2a\u0e38\u0e14 \u0e17\u0e31\u0e49\u0e07\u0e43\u0e19\u0e14\u0e49\u0e32\u0e19\u0e04\u0e38\u0e13\u0e20\u0e32\u0e1e \u0e41\u0e25\u0e30\u0e04\u0e27\u0e32\u0e21\u0e1b\u0e25\u0e2d\u0e14\u0e20\u0e31\u0e22 \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e25\u0e39\u0e01\u0e04\u0e49\u0e32 \u0e1c\u0e39\u0e49\u0e23\u0e31\u0e1a\u0e40\u0e2b\u0e21\u0e32 \u0e41\u0e25\u0e30 \u0e1c\u0e39\u0e49\u0e04\u0e49\u0e32\u0e2d\u0e37\u0e48\u0e19\u0e46 \u0e17\u0e35\u0e48\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e02\u0e49\u0e2d\u0e07\u0e01\u0e31\u0e1a\u0e07\u0e32\u0e19\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e20\u0e32\u0e22\u0e43\u0e15\u0e49\u0e19\u0e42\u0e22\u0e1a\u0e32\u0e22\u0e17\u0e35\u0e48\u0e27\u0e48\u0e32 \u201d\u0e16\u0e39\u0e01\u0e15\u0e49\u0e2d\u0e07 \u0e16\u0e39\u0e01\u0e15\u0e31\u0e07\u0e04\u0e4c \u0e17\u0e31\u0e19\u0e40\u0e27\u0e25\u0e32 \u0e1b\u0e25\u0e2d\u0e14\u0e20\u0e31\u0e22\u201d"
                    }
                  </div>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__j45ET
                    )}
                    component={Link}
                    href={`/contact-us`}
                    platform={"nextjs"}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__rHiIy)}
                        role={"img"}
                      />
                    ) : null}
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__xdDJz)}
                        role={"img"}
                      />
                    ) : null}
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__m6Fkr)}
                  >
                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : false
                    ) ? (
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__vxwW7
                        )}
                      >
                        <Test
                          className={classNames(
                            "__wab_instance",
                            sty.test__pwDSe
                          )}
                          slot={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__cyEh
                              )}
                            >
                              {"300+"}
                            </div>
                          }
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__eQcNh
                            )}
                          >
                            {
                              "\u0e01\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19 (\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19)"
                            }
                          </div>
                        </Test>
                        <Test
                          className={classNames(
                            "__wab_instance",
                            sty.test__xRSd1
                          )}
                          slot={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__fcIxn
                              )}
                            >
                              {"20,000+"}
                            </div>
                          }
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__aFu80
                            )}
                          >
                            {
                              "\u0e1c\u0e25\u0e34\u0e15\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e43\u0e15\u0e49\u0e14\u0e34\u0e19\u0e1c\u0e19\u0e31\u0e072\u0e0a\u0e31\u0e49\u0e19 PERMATANK\u00ae (\u0e43\u0e1a)"
                            }
                          </div>
                        </Test>
                      </Stack__>
                    ) : null}
                    {(
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? true
                        : false
                    ) ? (
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__yeYao
                        )}
                      >
                        <Test
                          className={classNames(
                            "__wab_instance",
                            sty.test__iOjY
                          )}
                          slot={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__kE1Q
                              )}
                            >
                              {"300+"}
                            </div>
                          }
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__gMh
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "\u0e08\u0e33\u0e2b\u0e19\u0e48\u0e32\u0e22\u0e41\u0e25\u0e30\u0e15\u0e34\u0e14\u0e15\u0e31\u0e49\u0e07\u0e17\u0e48\u0e2d\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e43\u0e15\u0e49\u0e14\u0e34\u0e19 \u0e1c\u0e19\u0e31\u0e07 2 \u0e0a\u0e31\u0e49\u0e19 (\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19)"
                              : "\u0e01\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19 (\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19)"}
                          </div>
                        </Test>
                        <Test
                          className={classNames(
                            "__wab_instance",
                            sty.test__yru0B
                          )}
                          slot={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__rx3B
                              )}
                            >
                              {hasVariant(
                                globalVariants,
                                "screen",
                                "mobileOnly"
                              )
                                ? "60+"
                                : "20,000+"}
                            </div>
                          }
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__q6Oqa
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobileOnly")
                              ? "\u0e08\u0e33\u0e2b\u0e19\u0e48\u0e32\u0e22\u0e41\u0e25\u0e30\u0e15\u0e34\u0e14\u0e15\u0e31\u0e49\u0e07\u0e23\u0e30\u0e1a\u0e1a\u0e27\u0e31\u0e14\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e2d\u0e31\u0e15\u0e42\u0e19\u0e21\u0e31\u0e15\u0e34\u0e20\u0e32\u0e22\u0e43\u0e19\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19 (ATG)"
                              : "\u0e1c\u0e25\u0e34\u0e15\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e43\u0e15\u0e49\u0e14\u0e34\u0e19\u0e1c\u0e19\u0e31\u0e072\u0e0a\u0e31\u0e49\u0e19 PERMATANK\u00ae (\u0e43\u0e1a)"}
                          </div>
                        </Test>
                      </Stack__>
                    ) : null}
                    <Test
                      className={classNames("__wab_instance", sty.test__nYSqu)}
                      slot={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__aOuhb
                          )}
                        >
                          {"300+"}
                        </div>
                      }
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__cMu5O
                        )}
                      >
                        {
                          "\u0e01\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19 (\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19)"
                        }
                      </div>
                    </Test>
                    <Test
                      className={classNames("__wab_instance", sty.test__laY1L)}
                      slot={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__bbhe2
                          )}
                        >
                          {"20,000+"}
                        </div>
                      }
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__jJihV
                        )}
                      >
                        {
                          "\u0e1c\u0e25\u0e34\u0e15\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e43\u0e15\u0e49\u0e14\u0e34\u0e19\u0e1c\u0e19\u0e31\u0e072\u0e0a\u0e31\u0e49\u0e19 PERMATANK\u00ae (\u0e43\u0e1a)"
                        }
                      </div>
                    </Test>
                    <Test
                      className={classNames("__wab_instance", sty.test__hFhUp)}
                      slot={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__d2Rp1
                          )}
                        >
                          {"300+"}
                        </div>
                      }
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___3Jtld
                        )}
                      >
                        {
                          "\u0e08\u0e33\u0e2b\u0e19\u0e48\u0e32\u0e22\u0e41\u0e25\u0e30\u0e15\u0e34\u0e14\u0e15\u0e31\u0e49\u0e07\u0e17\u0e48\u0e2d\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e43\u0e15\u0e49\u0e14\u0e34\u0e19 \u0e1c\u0e19\u0e31\u0e07 2 \u0e0a\u0e31\u0e49\u0e19 (\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19)"
                        }
                      </div>
                    </Test>
                    <Test
                      className={classNames("__wab_instance", sty.test___9LoPr)}
                      slot={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__s48Yp
                          )}
                        >
                          {"60+"}
                        </div>
                      }
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__z6S1B
                        )}
                      >
                        {
                          "\u0e08\u0e33\u0e2b\u0e19\u0e48\u0e32\u0e22\u0e41\u0e25\u0e30\u0e15\u0e34\u0e14\u0e15\u0e31\u0e49\u0e07\u0e23\u0e30\u0e1a\u0e1a\u0e27\u0e31\u0e14\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e2d\u0e31\u0e15\u0e42\u0e19\u0e21\u0e31\u0e15\u0e34\u0e20\u0e32\u0e22\u0e43\u0e19\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19 (ATG)"
                        }
                      </div>
                    </Test>
                  </Stack__>
                </Stack__>
              </div>
            </div>
          </Stack__>
          <ContactSectionFooterTop
            data-plasmic-name={"contactSectionFooterTop"}
            data-plasmic-override={overrides.contactSectionFooterTop}
            className={classNames(
              "__wab_instance",
              sty.contactSectionFooterTop
            )}
          />

          <Footer2
            data-plasmic-name={"footer2"}
            data-plasmic-override={overrides.footer2}
            className={classNames("__wab_instance", sty.footer2)}
          />
        </Stack__>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "header3",
    "heroBanner",
    "h1",
    "productAndService",
    "foreground2",
    "whyUs",
    "foreground",
    "img",
    "h3",
    "potential",
    "left2",
    "contactSectionFooterTop",
    "footer2"
  ],
  header3: ["header3"],
  heroBanner: ["heroBanner", "h1"],
  h1: ["h1"],
  productAndService: ["productAndService", "foreground2"],
  foreground2: ["foreground2"],
  whyUs: ["whyUs", "foreground", "img", "h3"],
  foreground: ["foreground"],
  img: ["img"],
  h3: ["h3"],
  potential: ["potential", "left2"],
  left2: ["left2"],
  contactSectionFooterTop: ["contactSectionFooterTop"],
  footer2: ["footer2"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  header3: typeof Header3;
  heroBanner: "div";
  h1: "h1";
  productAndService: "div";
  foreground2: "div";
  whyUs: "div";
  foreground: "div";
  img: typeof PlasmicImg__;
  h3: "h3";
  potential: "div";
  left2: "div";
  contactSectionFooterTop: typeof ContactSectionFooterTop;
  footer2: typeof Footer2;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    header3: makeNodeComponent("header3"),
    heroBanner: makeNodeComponent("heroBanner"),
    h1: makeNodeComponent("h1"),
    productAndService: makeNodeComponent("productAndService"),
    foreground2: makeNodeComponent("foreground2"),
    whyUs: makeNodeComponent("whyUs"),
    foreground: makeNodeComponent("foreground"),
    img: makeNodeComponent("img"),
    h3: makeNodeComponent("h3"),
    potential: makeNodeComponent("potential"),
    left2: makeNodeComponent("left2"),
    contactSectionFooterTop: makeNodeComponent("contactSectionFooterTop"),
    footer2: makeNodeComponent("footer2"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
