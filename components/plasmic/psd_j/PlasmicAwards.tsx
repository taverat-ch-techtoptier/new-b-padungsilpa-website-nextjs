// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: wauR2tk1hPNKxeSBCX7ndF
// Component: N-rd5kfmUAOw

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import Header3 from "../../Header3"; // plasmic-import: Fs6IO6-MbSpr/component
import { TabsContainer } from "@plasmicpkgs/plasmic-tabs";
import { TabButton } from "@plasmicpkgs/plasmic-tabs";
import Button from "../../Button"; // plasmic-import: lBHNzts6tFyj/component
import Footer2 from "../../Footer2"; // plasmic-import: 9pDOvBRTOpt9/component

import { useScreenVariants as useScreenVariants_2YPqM3KDWg } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: 2yPqM3-kD-WG/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: wauR2tk1hPNKxeSBCX7ndF/projectcss
import sty from "./PlasmicAwards.module.css"; // plasmic-import: N-rd5kfmUAOw/css

import CheckSvgIcon from "../plasmic_tabs/icons/PlasmicIcon__CheckSvg"; // plasmic-import: zq2s7N0xWucT/icon
import IconIcon from "../plasmic_tabs/icons/PlasmicIcon__Icon"; // plasmic-import: 8K40faRNhuCj/icon
import ArrowRightIcon from "./icons/PlasmicIcon__ArrowRight"; // plasmic-import: HZOtD1fAEgQN/icon
import Icon8Icon from "./icons/PlasmicIcon__Icon8"; // plasmic-import: YDVzHW_YDla2/icon
import IconIcon2 from "./icons/PlasmicIcon__Icon"; // plasmic-import: 8DjHUJI81s9x/icon
import _14655891761535698998SvgIcon from "./icons/PlasmicIcon___14655891761535698998Svg"; // plasmic-import: YG3YAEM_AYjb/icon

createPlasmicElementProxy;

export type PlasmicAwards__VariantMembers = {};
export type PlasmicAwards__VariantsArgs = {};
type VariantPropType = keyof PlasmicAwards__VariantsArgs;
export const PlasmicAwards__VariantProps = new Array<VariantPropType>();

export type PlasmicAwards__ArgsType = {
  pic?: React.ReactNode;
  slot?: React.ReactNode;
  pic2?: React.ReactNode;
  slot2?: React.ReactNode;
  pic3?: React.ReactNode;
  slot3?: React.ReactNode;
  pic4?: React.ReactNode;
  slot4?: React.ReactNode;
  pic5?: React.ReactNode;
  slot5?: React.ReactNode;
  pic6?: React.ReactNode;
  slot6?: React.ReactNode;
};
type ArgPropType = keyof PlasmicAwards__ArgsType;
export const PlasmicAwards__ArgProps = new Array<ArgPropType>(
  "pic",
  "slot",
  "pic2",
  "slot2",
  "pic3",
  "slot3",
  "pic4",
  "slot4",
  "pic5",
  "slot5",
  "pic6",
  "slot6"
);

export type PlasmicAwards__OverridesType = {
  page?: Flex__<"div">;
  header3?: Flex__<typeof Header3>;
  bannerHeader?: Flex__<"div">;
  h1?: Flex__<"h1">;
  tabsContainer?: Flex__<typeof TabsContainer>;
  aboutUs?: Flex__<"div">;
  foreground?: Flex__<"div">;
  h2?: Flex__<"h2">;
  productAndService?: Flex__<"div">;
  footer2?: Flex__<typeof Footer2>;
};

export interface DefaultAwardsProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicAwards__RenderFunc(props: {
  variants: PlasmicAwards__VariantsArgs;
  args: PlasmicAwards__ArgsType;
  overrides: PlasmicAwards__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants_2YPqM3KDWg()
  });

  return (
    <React.Fragment>
      <Head></Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <Stack__
          as={"div"}
          data-plasmic-name={"page"}
          data-plasmic-override={overrides.page}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.page
          )}
        >
          <Header3
            data-plasmic-name={"header3"}
            data-plasmic-override={overrides.header3}
            className={classNames("__wab_instance", sty.header3)}
          />

          <div
            data-plasmic-name={"bannerHeader"}
            data-plasmic-override={overrides.bannerHeader}
            className={classNames(projectcss.all, sty.bannerHeader)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__xcHhN)}>
              <div className={classNames(projectcss.all, sty.freeBox__vo0Sf)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__osaoo)}
                >
                  <h1
                    data-plasmic-name={"h1"}
                    data-plasmic-override={overrides.h1}
                    className={classNames(
                      projectcss.all,
                      projectcss.h1,
                      projectcss.__wab_text,
                      sty.h1
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "\u0e1b\u0e23\u0e30\u0e27\u0e31\u0e15\u0e34\u0e04\u0e27\u0e32\u0e21\u0e40\u0e1b\u0e47\u0e19\u0e21\u0e32"
                      : "\u0e1c\u0e25\u0e07\u0e32\u0e19\u0e02\u0e2d\u0e07\u0e40\u0e23\u0e32"}
                  </h1>
                </Stack__>
              </div>
            </div>
          </div>
          <TabsContainer
            data-plasmic-name={"tabsContainer"}
            data-plasmic-override={overrides.tabsContainer}
            initialKey={"tab1"}
          >
            <DataCtxReader__>
              {$ctx => (
                <div className={classNames(projectcss.all, sty.freeBox__ilqHj)}>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___11MwL)}
                  >
                    <TabButton
                      className={classNames(
                        "__wab_instance",
                        sty.tabButton__dw65V
                      )}
                      tabKey={"tab1"}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__hInE
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__bkN7K
                          )}
                        >
                          {
                            "\u0e01\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19"
                          }
                        </div>
                      </Button>
                    </TabButton>
                    <TabButton
                      className={classNames(
                        "__wab_instance",
                        sty.tabButton__pYyu
                      )}
                      tabKey={"tab1"}
                    >
                      <Button>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__w5Hcu
                          )}
                        >
                          {
                            "PERMATANK (\u0e20\u0e32\u0e22\u0e43\u0e19\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28)"
                          }
                        </div>
                      </Button>
                    </TabButton>
                    <TabButton
                      className={classNames(
                        "__wab_instance",
                        sty.tabButton__crikP
                      )}
                      tabKey={"tab1"}
                    >
                      <Button
                        className={classNames(
                          "__wab_instance",
                          sty.button__qoXCn
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ikBEf
                          )}
                        >
                          {
                            "PERMATANK (\u0e15\u0e48\u0e32\u0e07\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28)"
                          }
                        </div>
                      </Button>
                    </TabButton>
                  </Stack__>
                </div>
              )}
            </DataCtxReader__>
          </TabsContainer>
          <Stack__
            as={"div"}
            data-plasmic-name={"aboutUs"}
            data-plasmic-override={overrides.aboutUs}
            hasGap={true}
            className={classNames(projectcss.all, sty.aboutUs)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___5BQy1)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"foreground"}
                data-plasmic-override={overrides.foreground}
                hasGap={true}
                className={classNames(projectcss.all, sty.foreground)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__omqxf)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__khELj)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__i7237)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__zg0Eq
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__qv81P
                          )}
                        >
                          {
                            "\u0e01\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19"
                          }
                        </div>
                      </Stack__>
                      <h2
                        data-plasmic-name={"h2"}
                        data-plasmic-override={overrides.h2}
                        className={classNames(
                          projectcss.all,
                          projectcss.h2,
                          projectcss.__wab_text,
                          sty.h2
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "\u0e01\u0e25\u0e38\u0e48\u0e21\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17\u0e1c\u0e14\u0e38\u0e07\u0e28\u0e34\u0e25\u0e1b\u0e4c"
                          : "\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 \u0e1c\u0e14\u0e38\u0e07\u0e28\u0e34\u0e25\u0e1b\u0e4c\u0e42\u0e22\u0e18\u0e32\u0e01\u0e32\u0e23 \u0e08\u0e33\u0e01\u0e31\u0e14 \u0e40\u0e1b\u0e47\u0e19\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17\u0e01\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e0a\u0e31\u0e49\u0e19\u0e19\u0e33 \u0e17\u0e35\u0e48\u0e40\u0e0a\u0e35\u0e48\u0e22\u0e27\u0e0a\u0e32\u0e0d\u0e41\u0e25\u0e30\u0e21\u0e32\u0e01\u0e14\u0e49\u0e27\u0e22\u0e1b\u0e23\u0e30\u0e2a\u0e1a\u0e01\u0e32\u0e23\u0e13\u0e4c \u0e43\u0e19\u0e07\u0e32\u0e19\u0e01\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19"}
                      </h2>
                    </Stack__>
                  </div>
                </Stack__>
                {(
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? true
                    : false
                ) ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__qMNah)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__q2AIv)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__l7HN
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__baJzZ
                          )}
                        >
                          <ArrowRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__gQqOl
                            )}
                            role={"img"}
                          />
                        </div>
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__dWEi
                            )}
                          >
                            <Icon8Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__iwsaI
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__fqno
                          )}
                        >
                          <Stack__
                            as={PlasmicLink__}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              sty.link__xcXQ
                            )}
                            component={Link}
                            href={`/`}
                            platform={"nextjs"}
                          >
                            {false ? (
                              <IconIcon2
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__heWf8
                                )}
                                role={"img"}
                              />
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__hqFi
                              )}
                            >
                              {
                                "\u0e07\u0e32\u0e19\u0e01\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19"
                              }
                            </div>
                            {false ? (
                              <IconIcon2
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__mo78L
                                )}
                                role={"img"}
                              />
                            ) : null}
                          </Stack__>
                        </Stack__>
                      </Stack__>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__sLGoO)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__qsOdi
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__qYnr
                          )}
                        >
                          <ArrowRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__g9C4
                            )}
                            role={"img"}
                          />
                        </div>
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__i0Df
                            )}
                          >
                            <Icon8Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__oTaM
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___3PY8O
                          )}
                        >
                          <Stack__
                            as={PlasmicLink__}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              sty.link__fRyq6
                            )}
                            component={Link}
                            href={`/`}
                            platform={"nextjs"}
                          >
                            {false ? (
                              <IconIcon2
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__ikRsc
                                )}
                                role={"img"}
                              />
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__hreLi
                              )}
                            >
                              {
                                "PERMATANK\u00ae \u0e41\u0e25\u0e30\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e41\u0e1a\u0e1a\u0e15\u0e48\u0e32\u0e07\u0e46"
                              }
                            </div>
                            {false ? (
                              <IconIcon2
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__jiUvc
                                )}
                                role={"img"}
                              />
                            ) : null}
                          </Stack__>
                        </Stack__>
                      </Stack__>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__uOiy1)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__gmeq
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__e1Xr7
                          )}
                        >
                          <ArrowRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__fAtDf
                            )}
                            role={"img"}
                          />
                        </div>
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__ilSuG
                            )}
                          >
                            <Icon8Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__meIgY
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__mYe0I
                          )}
                        >
                          <Stack__
                            as={PlasmicLink__}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              sty.link___1C5Gr
                            )}
                            component={Link}
                            href={`/`}
                            platform={"nextjs"}
                          >
                            {false ? (
                              <IconIcon2
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___68JGy
                                )}
                                role={"img"}
                              />
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__gdFmm
                              )}
                            >
                              {
                                "\u0e08\u0e33\u0e2b\u0e19\u0e48\u0e32\u0e22\u0e41\u0e25\u0e30\u0e15\u0e34\u0e14\u0e15\u0e31\u0e49\u0e07\u0e17\u0e48\u0e2d\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e43\u0e15\u0e49\u0e14\u0e34\u0e19\u0e1c\u0e19\u0e31\u0e07 2 \u0e0a\u0e31\u0e49\u0e19"
                              }
                            </div>
                            {false ? (
                              <IconIcon2
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___9OqJo
                                )}
                                role={"img"}
                              />
                            ) : null}
                          </Stack__>
                        </Stack__>
                      </Stack__>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__cZgSt)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__nr0V
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__q4W3S
                          )}
                        >
                          <ArrowRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__izJhN
                            )}
                            role={"img"}
                          />
                        </div>
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__vTIzK
                            )}
                          >
                            <Icon8Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__bcP7I
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___7VlSg
                          )}
                        >
                          <Stack__
                            as={PlasmicLink__}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              sty.link__ncexn
                            )}
                            component={Link}
                            href={`/`}
                            platform={"nextjs"}
                          >
                            {false ? (
                              <IconIcon2
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__lyH5Z
                                )}
                                role={"img"}
                              />
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__cr0AO
                              )}
                            >
                              {
                                "\u0e23\u0e30\u0e1a\u0e1a\u0e27\u0e31\u0e14\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e2d\u0e31\u0e15\u0e42\u0e19\u0e21\u0e31\u0e15\u0e34\u0e20\u0e32\u0e22\u0e43\u0e19\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19"
                              }
                            </div>
                            {false ? (
                              <IconIcon2
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__yTtyP
                                )}
                                role={"img"}
                              />
                            ) : null}
                          </Stack__>
                        </Stack__>
                      </Stack__>
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___2BMMt
                      )}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__scxyn
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__jxzQk
                          )}
                        >
                          <ArrowRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__wvEtn
                            )}
                            role={"img"}
                          />
                        </div>
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__vX7G2
                            )}
                          >
                            <Icon8Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__d45BI
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__kmuAo
                          )}
                        >
                          <Stack__
                            as={PlasmicLink__}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              sty.link__n0SMo
                            )}
                            component={Link}
                            href={`/`}
                            platform={"nextjs"}
                          >
                            {false ? (
                              <IconIcon2
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__oaqhz
                                )}
                                role={"img"}
                              />
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__trgXu
                              )}
                            >
                              {
                                "\u0e2d\u0e38\u0e1b\u0e01\u0e23\u0e13\u0e4c\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e01\u0e31\u0e1a\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19"
                              }
                            </div>
                            {false ? (
                              <IconIcon2
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___5HTfa
                                )}
                                role={"img"}
                              />
                            ) : null}
                          </Stack__>
                        </Stack__>
                      </Stack__>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.freeBox__okJfe)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___0Zokn
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__jhBrn
                          )}
                        >
                          <ArrowRightIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__llCbq
                            )}
                            role={"img"}
                          />
                        </div>
                        {false ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__dcloW
                            )}
                          >
                            <Icon8Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__wJxXe
                              )}
                              role={"img"}
                            />
                          </div>
                        ) : null}
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ldYpL
                          )}
                        >
                          <Stack__
                            as={PlasmicLink__}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              sty.link__lZa6P
                            )}
                            component={Link}
                            href={`/`}
                            platform={"nextjs"}
                          >
                            {false ? (
                              <IconIcon2
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___0D5R4
                                )}
                                role={"img"}
                              />
                            ) : null}
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__xtnbF
                              )}
                            >
                              {
                                "\u0e43\u0e2b\u0e49\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e15\u0e48\u0e32\u0e07\u0e46\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e01\u0e31\u0e1a\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19"
                              }
                            </div>
                            {false ? (
                              <IconIcon2
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__e8Ic3
                                )}
                                role={"img"}
                              />
                            ) : null}
                          </Stack__>
                        </Stack__>
                      </Stack__>
                    </div>
                  </div>
                ) : null}
              </Stack__>
            </Stack__>
          </Stack__>
          <Stack__
            as={"div"}
            data-plasmic-name={"productAndService"}
            data-plasmic-override={overrides.productAndService}
            hasGap={true}
            className={classNames(projectcss.all, sty.productAndService)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__l5Pmi)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__qnGkp)}
              >
                <div className={classNames(projectcss.all, sty.column__gtYtV)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__k7Q2R
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__pcqTz)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__um3Wf)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/_4664413729649586456683132441591559472871573NJpg.jpg",
                              fullWidth: 2048,
                              fullHeight: 1536,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___8KWep
                      )}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <React.Fragment>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__d4Owo
                              )}
                            >
                              {
                                "\u0e1b\u0e15\u0e17. \u0e1a\u0e08\u0e01. \u0e40\u0e2d\u0e0a \u0e0b\u0e35 \u0e40\u0e2d\u0e47\u0e19 \u0e40\u0e2d\u0e47\u0e19\u0e40\u0e19\u0e2d\u0e23\u0e4c\u0e08\u0e35 \u0e08\u0e33\u0e01\u0e31\u0e14"
                              }
                            </div>
                            <Stack__
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__q3Cdb
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__ekhY4
                                )}
                              >
                                <_14655891761535698998SvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__wKjBg
                                  )}
                                  role={"img"}
                                />
                              </div>
                              <Stack__
                                as={"div"}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__j7JRz
                                )}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__roZem
                                  )}
                                >
                                  {
                                    "\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 \u0e1c\u0e14\u0e38\u0e07\u0e28\u0e34\u0e25\u0e1b\u0e4c\u0e42\u0e22\u0e18\u0e32\u0e01\u0e32\u0e23 \u0e08\u0e33\u0e01\u0e31\u0e14 (PCW) \u0e40\u0e1b\u0e47\u0e19\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17\u0e2f\u0e01\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e0a\u0e31\u0e49\u0e19\u0e19\u0e33\u0e17\u0e35\u0e48\u0e40\u0e0a\u0e35\u0e48\u0e22\u0e27\u0e0a\u0e32\u0e0d\u0e41\u0e25\u0e30\u0e21\u0e32\u0e01\u0e14\u0e49\u0e27\u0e1b\u0e23\u0e30\u0e2a\u0e1a\u0e01\u0e32\u0e23\u0e13\u0e4c\u0e43\u0e19\u0e07\u0e32\u0e19\u0e01\u0e48\u0e2d\u0e2a\u0e23\u0e49\u0e32\u0e07\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19 \u0e41\u0e25\u0e30\u0e01\u0e4a\u0e32\u0e0b \u0e15\u0e25\u0e2d\u0e14\u0e08\u0e19\u0e07\u0e32\u0e19\u0e2d\u0e37\u0e48\u0e19\u0e46\u0e17\u0e35\u0e48\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e02\u0e49\u0e2d\u0e07 \u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e32\u0e01\u0e21\u0e35\u0e1c\u0e25\u0e07\u0e32\u0e19\u0e40\u0e1b\u0e47\u0e19\u0e17\u0e35\u0e48\u0e40\u0e0a\u0e37\u0e48\u0e2d\u0e16\u0e37\u0e2d \u0e41\u0e25\u0e30\u0e44\u0e14\u0e49\u0e23\u0e31\u0e1a\u0e04\u0e27\u0e32\u0e21\u0e44\u0e27\u0e49\u0e27\u0e32\u0e07\u0e43\u0e08 \u0e08\u0e32\u0e01\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e0a\u0e31\u0e49\u0e19\u0e19\u0e33"
                                  }
                                </div>
                              </Stack__>
                            </Stack__>
                          </React.Fragment>
                        ),
                        value: args.slot
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__wmTql)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__eWe49
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__nltwe)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__jkZsf)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/_4664413729649586456683132441591559472871573NJpg.jpg",
                              fullWidth: 2048,
                              fullHeight: 1536,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic2
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__lStG)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <React.Fragment>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___4L1C
                              )}
                            >
                              {
                                "\u0e1b\u0e15\u0e17. \u0e1a\u0e08\u0e01. \u0e08\u0e34\u0e14\u0e32\u0e20\u0e32 \u0e1b\u0e34\u0e42\u0e15\u0e23\u0e40\u0e25\u0e35\u0e22\u0e21"
                              }
                            </div>
                            <Stack__
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__jnp2B
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__wbbdq
                                )}
                              >
                                <_14655891761535698998SvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg___6UtQi
                                  )}
                                  role={"img"}
                                />
                              </div>
                              <Stack__
                                as={"div"}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox___80FWw
                                )}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__w7Cn0
                                  )}
                                >
                                  {
                                    "\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17\u0e2f \u0e22\u0e31\u0e07\u0e44\u0e14\u0e49\u0e17\u0e33\u0e01\u0e32\u0e23\u0e02\u0e32\u0e22\u0e41\u0e25\u0e30\u0e15\u0e34\u0e14\u0e15\u0e31\u0e49\u0e07\u0e17\u0e48\u0e2d\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e1c\u0e19\u0e31\u0e07 2 \u0e0a\u0e31\u0e49\u0e19 \u0e17\u0e35\u0e48\u0e44\u0e14\u0e49\u0e23\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e23\u0e31\u0e1a\u0e23\u0e2d\u0e07\u0e08\u0e32\u0e01\u0e01\u0e23\u0e21\u0e18\u0e38\u0e23\u0e01\u0e34\u0e08\u0e1e\u0e25\u0e31\u0e07\u0e07\u0e32\u0e19"
                                  }
                                </div>
                              </Stack__>
                            </Stack__>
                          </React.Fragment>
                        ),
                        value: args.slot2
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__v2QkT)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__vpglv
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__tXcFy)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img___6Xelz)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/_4664413729649586456683132441591559472871573NJpg.jpg",
                              fullWidth: 2048,
                              fullHeight: 1536,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic3
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox___1Hos)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <React.Fragment>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__mDhK
                              )}
                            >
                              {
                                "PTT, \u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 \u0e0b\u0e35 \u0e14\u0e31\u0e1a\u0e40\u0e1a\u0e34\u0e25\u0e22\u0e39 \u0e40\u0e2d\u0e19\u0e40\u0e19\u0e2d\u0e08\u0e35 \u0e08\u0e33\u0e01\u0e31\u0e14"
                              }
                            </div>
                            <Stack__
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__pgMu9
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__oRtRf
                                )}
                              >
                                <_14655891761535698998SvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__zdQpi
                                  )}
                                  role={"img"}
                                />
                              </div>
                              <Stack__
                                as={"div"}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox___618GI
                                )}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__lAsVz
                                  )}
                                >
                                  {
                                    "\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e43\u0e15\u0e49\u0e14\u0e34\u0e19\u0e41\u0e1a\u0e1a\u0e1c\u0e19\u0e31\u0e07 2 \u0e0a\u0e31\u0e49\u0e19\u0e02\u0e2d\u0e07\u00a0\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 \u0e1c\u0e14\u0e38\u0e07\u0e28\u0e34\u0e25\u0e1b\u0e4c\u0e27\u0e34\u0e28\u0e27\u0e01\u0e32\u0e23 \u0e08\u0e33\u0e01\u0e31\u0e14 \u0e1c\u0e25\u0e34\u0e15\u0e15\u0e32\u0e21\u0e21\u0e32\u0e15\u0e23\u0e10\u0e32\u0e19\u0e02\u0e2d\u0e07 UL \u0e41\u0e25\u0e30 STEEL TANK INSTITUTE Technology \u0e16\u0e31\u0e07\u0e21\u0e35\u0e04\u0e27\u0e32\u0e21\u0e41\u0e02\u0e47\u0e07\u0e41\u0e23\u0e07 \u0e17\u0e19\u0e17\u0e32\u0e19 \u0e21\u0e35\u0e04\u0e38\u0e13\u0e20\u0e32\u0e1e \u0e21\u0e35\u0e2d\u0e32\u0e22\u0e38\u0e43\u0e0a\u0e49\u0e07\u0e32\u0e19\u0e22\u0e32\u0e27\u0e19\u0e32\u0e19\u0e16\u0e36\u0e07\u0e01\u0e27\u0e48\u0e32 30 \u0e1b\u0e35"
                                  }
                                </div>
                              </Stack__>
                            </Stack__>
                          </React.Fragment>
                        ),
                        value: args.slot3
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column___66Jdd)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__s8Txe
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__ke4Rn)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img___4TlFm)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/_4664413729649586456683132441591559472871573NJpg.jpg",
                              fullWidth: 2048,
                              fullHeight: 1536,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic4
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__x85Nf)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <React.Fragment>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__aR2Ss
                              )}
                            >
                              {
                                "PTTRM, \u0e19\u0e19\u0e17\u0e1a\u0e38\u0e23\u0e35-\u0e19\u0e04\u0e23\u0e2d\u0e34\u0e19\u0e17\u0e23\u0e4c"
                              }
                            </div>
                            <Stack__
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__fbLke
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__ig0Yc
                                )}
                              >
                                <_14655891761535698998SvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__dgKHk
                                  )}
                                  role={"img"}
                                />
                              </div>
                              <Stack__
                                as={"div"}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__aVvzF
                                )}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__kpYuz
                                  )}
                                >
                                  {
                                    "\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 \u0e1c\u0e14\u0e38\u0e07\u0e28\u0e34\u0e25\u0e1b\u0e4c\u0e27\u0e34\u0e28\u0e27\u0e01\u0e32\u0e23 \u0e08\u0e33\u0e01\u0e31\u0e14 (PSE)\u00a0\u0e40\u0e1b\u0e47\u0e19\u0e15\u0e31\u0e27\u0e41\u0e17\u0e19\u0e08\u0e33\u0e2b\u0e19\u0e48\u0e32\u0e22\u0e41\u0e25\u0e30\u0e15\u0e34\u0e14\u0e15\u0e31\u0e49\u0e07\u0e23\u0e30\u0e1a\u0e1a\u0e27\u0e31\u0e14\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e2d\u0e31\u0e15\u0e42\u0e19\u0e21\u0e31\u0e15\u0e34\u0e20\u0e32\u0e22\u0e43\u0e19\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19"
                                  }
                                </div>
                              </Stack__>
                            </Stack__>
                          </React.Fragment>
                        ),
                        value: args.slot4
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column__grNhs)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__ofW3Z
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__qYmgn)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__ffkoI)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/_4664413729649586456683132441591559472871573NJpg.jpg",
                              fullWidth: 2048,
                              fullHeight: 1536,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic5
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__jWqXo)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <React.Fragment>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__teo0W
                              )}
                            >
                              {
                                "\u0e1b\u0e15\u0e17. \u0e2b\u0e08\u0e01.\u0e27\u0e31\u0e07\u0e08\u0e31\u0e19\u0e17\u0e23\u0e4c \u0e0b\u0e31\u0e1e\u0e1e\u0e25\u0e32\u0e22 \u0e2d\u0e2d\u0e22\u0e25\u0e4c"
                              }
                            </div>
                            <Stack__
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__jzRvq
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__l8E9U
                                )}
                              >
                                <_14655891761535698998SvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__ncAf
                                  )}
                                  role={"img"}
                                />
                              </div>
                              <Stack__
                                as={"div"}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__l7TGy
                                )}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__o1GId
                                  )}
                                >
                                  {
                                    "\u0e1a\u0e23\u0e34\u0e29\u0e31\u0e17 \u0e1c\u0e14\u0e38\u0e07\u0e28\u0e34\u0e25\u0e1b\u0e4c\u0e27\u0e34\u0e28\u0e27\u0e01\u0e32\u0e23 \u0e08\u0e33\u0e01\u0e31\u0e14 (PSE)\u00a0\u0e1e\u0e31\u0e12\u0e19\u0e32\u0e41\u0e1a\u0e1a\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e43\u0e15\u0e49\u0e14\u0e34\u0e19 \u0e41\u0e25\u0e30\u0e2d\u0e38\u0e1b\u0e01\u0e23\u0e13\u0e4c\u0e17\u0e35\u0e48\u0e40\u0e01\u0e35\u0e48\u0e22\u0e27\u0e02\u0e49\u0e2d\u0e07\u0e15\u0e48\u0e32\u0e07\u0e46 \u0e2d\u0e22\u0e48\u0e32\u0e07\u0e15\u0e48\u0e2d\u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07"
                                  }
                                </div>
                              </Stack__>
                            </Stack__>
                          </React.Fragment>
                        ),
                        value: args.slot5
                      })}
                    </Stack__>
                  </Stack__>
                </div>
                <div className={classNames(projectcss.all, sty.column___6XnFw)}>
                  <Stack__
                    as={PlasmicLink__}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      projectcss.a,
                      sty.link__jlN42
                    )}
                    component={Link}
                    href={`/PERMATANK และถังน้ำมันแบบต่างๆ`}
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__huJ0)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <PlasmicImg__
                            alt={""}
                            className={classNames(sty.img__mTe7)}
                            displayHeight={"250px"}
                            displayMaxHeight={"none"}
                            displayMaxWidth={"100%"}
                            displayMinHeight={"0"}
                            displayMinWidth={"0"}
                            displayWidth={"100%"}
                            loading={"lazy"}
                            src={{
                              src: "/plasmic/psd_j/images/_3705633156805265974448545045445868309516612NJpg.jpg",
                              fullWidth: 1479,
                              fullHeight: 1109,
                              aspectRatio: undefined
                            }}
                          />
                        ),

                        value: args.pic6
                      })}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__rz34)}
                    >
                      {renderPlasmicSlot({
                        defaultContents: (
                          <React.Fragment>
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___2Uqjb
                              )}
                            >
                              {
                                "Esso \u0e2a\u0e32\u0e02\u0e32\u0e2b\u0e19\u0e2d\u0e07\u0e22\u0e32\u0e22\u0e1a\u0e39\u0e48 \u0e15. \u0e2b\u0e19\u0e2d\u0e07\u0e02\u0e32\u0e21"
                              }
                            </div>
                            <Stack__
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__qNvk8
                              )}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__cl3Nj
                                )}
                              >
                                <_14655891761535698998SvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__xYZlZ
                                  )}
                                  role={"img"}
                                />
                              </div>
                              <Stack__
                                as={"div"}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  sty.freeBox__lWeEi
                                )}
                              >
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__qhcFo
                                  )}
                                >
                                  {
                                    "\u2022 \u0e07\u0e32\u0e19\u0e1d\u0e31\u0e07\u0e16\u0e31\u0e07\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\u0e43\u0e15\u0e49\u0e14\u0e34\u0e19\u0e1c\u0e19\u0e31\u0e07 2 \u0e0a\u0e31\u0e49\u0e19 PERMATANK\u00ae\n\u2022 \u0e07\u0e32\u0e19\u0e15\u0e34\u0e14\u0e15\u0e31\u0e49\u0e07\u0e17\u0e48\u0e2d\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19 2 \u0e0a\u0e31\u0e49\u0e19 \u0e22\u0e35\u0e48\u0e2b\u0e49\u0e2d NUPI \u0e43\u0e19\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19\n\u2022 \u0e07\u0e32\u0e19\u0e15\u0e23\u0e27\u0e08\u0e40\u0e0a\u0e47\u0e04\u0e23\u0e30\u0e1a\u0e1a\u0e17\u0e48\u0e2d \u0e41\u0e25\u0e30\u0e01\u0e32\u0e23\u0e23\u0e31\u0e48\u0e27\u0e0b\u0e36\u0e21\u0e02\u0e2d\u0e07\u0e17\u0e48\u0e2d\u0e08\u0e48\u0e32\u0e22\u0e19\u0e49\u0e33\u0e21\u0e31\u0e19"
                                  }
                                </div>
                              </Stack__>
                            </Stack__>
                          </React.Fragment>
                        ),
                        value: args.slot6
                      })}
                    </Stack__>
                  </Stack__>
                </div>
              </Stack__>
            </Stack__>
          </Stack__>
          <Footer2
            data-plasmic-name={"footer2"}
            data-plasmic-override={overrides.footer2}
            className={classNames("__wab_instance", sty.footer2)}
          />
        </Stack__>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  page: [
    "page",
    "header3",
    "bannerHeader",
    "h1",
    "tabsContainer",
    "aboutUs",
    "foreground",
    "h2",
    "productAndService",
    "footer2"
  ],
  header3: ["header3"],
  bannerHeader: ["bannerHeader", "h1"],
  h1: ["h1"],
  tabsContainer: ["tabsContainer"],
  aboutUs: ["aboutUs", "foreground", "h2"],
  foreground: ["foreground", "h2"],
  h2: ["h2"],
  productAndService: ["productAndService"],
  footer2: ["footer2"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  page: "div";
  header3: typeof Header3;
  bannerHeader: "div";
  h1: "h1";
  tabsContainer: typeof TabsContainer;
  aboutUs: "div";
  foreground: "div";
  h2: "h2";
  productAndService: "div";
  footer2: typeof Footer2;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicAwards__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicAwards__VariantsArgs;
    args?: PlasmicAwards__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicAwards__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicAwards__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicAwards__ArgProps,
          internalVariantPropNames: PlasmicAwards__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicAwards__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "page") {
    func.displayName = "PlasmicAwards";
  } else {
    func.displayName = `PlasmicAwards.${nodeName}`;
  }
  return func;
}

export const PlasmicAwards = Object.assign(
  // Top-level PlasmicAwards renders the root element
  makeNodeComponent("page"),
  {
    // Helper components rendering sub-elements
    header3: makeNodeComponent("header3"),
    bannerHeader: makeNodeComponent("bannerHeader"),
    h1: makeNodeComponent("h1"),
    tabsContainer: makeNodeComponent("tabsContainer"),
    aboutUs: makeNodeComponent("aboutUs"),
    foreground: makeNodeComponent("foreground"),
    h2: makeNodeComponent("h2"),
    productAndService: makeNodeComponent("productAndService"),
    footer2: makeNodeComponent("footer2"),

    // Metadata about props expected for PlasmicAwards
    internalVariantProps: PlasmicAwards__VariantProps,
    internalArgProps: PlasmicAwards__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicAwards;
/* prettier-ignore-end */
